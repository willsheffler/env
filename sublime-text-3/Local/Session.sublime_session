{
	"file_history":
	[
		"/home/sheffler/.config/qtile/config.py",
		"/home/sheffler/.config/sublime-text-3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/home/sheffler/.config/sublime-text-3/Packages/User/SublimeLinter.sublime-settings",
		"/home/sheffler/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/sheffler/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/sheffler/rfd_tip/.github/workflows/run_tests_digs.yml",
		"/home/sheffler/rfd_tip/ci/run_pytest.sh",
		"/home/sheffler/rfd_tip/ci/checkout_submodules.sh",
		"/home/sheffler/rfdsym/sublime_build.log",
		"/home/sheffler/rfdsym/ide/whs/rf_diffusion.sublime-project",
		"/home/sheffler/rfdsym/ide/whs/notes.txt",
		"/home/sheffler/willutil/willutil/homog/thgeom.py",
		"/home/sheffler/willutil/willutil/viz/pymol_viz.py",
		"/home/sheffler/willutil/willutil/sym/sym.py",
		"/home/sheffler/willutil/willutil/viz/pymol_cgo.py",
		"/home/sheffler/willutil/willutil/tests/homog/test_thgeom.py",
		"/home/sheffler/willutil/willutil/homog/hgeom.py",
		"/home/sheffler/willutil/willutil/viz/plot.py",
		"/home/sheffler/willutil/willutil/timer.py",
		"/home/sheffler/willutil/willutil/__init__.py",
		"/home/sheffler/willutil/willutil/bunch.py",
		"/home/sheffler/willutil/willutil/rigid/rigidbody.py",
		"/home/sheffler/willutil/willutil/tests/chem/test_rotamer.py",
		"/home/sheffler/willutil/willutil/chem/rotamer.py",
		"/home/sheffler/willutil/willutil/chem/__init__.py",
		"/home/sheffler/willutil/willutil/storage.py",
		"/home/sheffler/willutil/willutil/chem/chemical.py",
		"/home/sheffler/willutil/setup.py",
		"/home/sheffler/willutil/willutil/viz/viz_deco.py",
		"/home/sheffler/willutil/log/sublime_build.log",
		"/home/sheffler/willutil/ide/willutil.sublime-project",
		"/home/sheffler/rpxdock/rpxdock_master/sublime_build.log",
		"/home/sheffler/rpxdock/rpxdock_master/ide/rpxdock.sublime-project",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/sampling/xform_hierarchy.cpp",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/sampling/xform_hierarchy.hpp",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/search/hierarchical.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/util/dilated_int.hpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/voxel_viz.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/voxdock.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/voxel/test_voxel.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_semantics.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_conditions.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/samp/test_tip_atom_placer.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/__init__.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/tip_atom_placer.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fit/qcp_rms.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/fit/test_qcp_rms.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/voxel.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_sampling_cuda.hpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/samp/test_sampling.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/sampling.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_dilated_int.hpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/voxel/test_voxdock.py",
		"/home/sheffler/rfdsym/rf_diffusion/conftest.py",
		"/home/sheffler/.config/qtile/.yapf.style",
		"/home/sheffler/.config/.yapf.style",
		"/home/sheffler/.profile",
		"/etc/systemd/sleep.conf",
		"/home/sheffler/software/graphbolt/apps/Makefile",
		"/home/sheffler/rfd_tip/.git/MERGE_MSG",
		"/home/sheffler/rfd/rf_diffusion/test_inference.py",
		"/home/sheffler/rfd_tip/.ruff.toml",
		"/home/sheffler/rfd_tip/rf_diffusion/benchmark/per_sequence_metrics.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/sampling/compound.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/search/__init__.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/filter/redundancy.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/viz/body_viz.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/app/dock.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/search/result.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/score/rpxhier.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/tests/sampling/test_comp_manipulation.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/search/cyclic.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/search/cyclic_stack.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/body/body.py",
		"/home/sheffler/rpxdock/rpxdock_master/setup.py",
		"/home/sheffler/rpxdock/rpxdock_master/README.rst",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/__init__.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/rotamer/rotamer.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/app/options.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/rotamer/rosetta_rots.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/tests/rotamer/disabled_test_rosetta_rots.py",
		"/home/sheffler/rpxdock/rpxdock_master/rpxdock/geom/primitive.hpp",
		"/home/sheffler/src/willutil_cpp/willutil_cpp/geom/primitive.hpp",
		"/home/sheffler/src/willutil_cpp/willutil_cpp/util/types.hpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/cudafunc.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/rf2aa_util.hpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_sampling.cpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_shapes.hpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_sampling.cu",
		"/home/sheffler/src/rifdock/apps/rosetta/riflib/HBondedPairGenerator.cc",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/testutil.py",
		"/home/sheffler/rfdsym/lib/rf2aa/pytest.ini",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_model.py",
		"/home/sheffler/rfdsym/rf_diffusion/tests/integration/test_sym_inference.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_benchmark.py",
		"/home/sheffler/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/sheffler/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/sheffler/rfdsym/ide/whs/change_build_file.py",
		"/home/sheffler/project/neorifgen/dna_example.pdb",
		"/home/sheffler/.pymolrc",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/__init__.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/cudabuild.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/__init__.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fit/_qcp_rms_cuda.hpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/fit/test_qcp_scan.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/rf2aa_cuda_util.hpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_tip_atom_placer.cpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_tip_atom_placer.cu",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_tip_atom_placer_cuda.hpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/tip_atom_placer_cuda.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/_voxel.cpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/dock/rigid_body.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/sampling_cuda.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/bvh/test_bvh_numba.py",
		"/home/sheffler/src/rosetta/rifdock/apps/rosetta/riflib/BurialManager.hh",
		"/home/sheffler/src/rosetta/rifdock/apps/rosetta/riflib/BurialManager.cc",
		"/home/sheffler/src/rosetta/rifdock/CMakeLists.txt",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/sampling/test_sampling.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/_sampling.cpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/_sampling_cuda.hpp",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/__init__.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/sampling.py",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_sampler.py",
		"/home/sheffler/src/rosetta/for_rifdock/source/src/core/io/silent/SilentStruct.cc",
		"/home/sheffler/src/rosetta/for_rifdock/source/src/protocols/forge/remodel/RemodelWorkingSet.cc",
		"/usr/include/boost/config/detail/suffix.hpp",
		"/usr/include/boost/core/empty_value.hpp"
	],
	"folder_history":
	[
		"/home/sheffler/.config/qtile",
		"/home/sheffler/rfd_tip",
		"/home/sheffler/rfd_tip/rf_diffusion",
		"/home/sheffler/rpxdock",
		"/home/sheffler/src/willutil_cpp",
		"/home/sheffler/src/rifdock",
		"/usr/include/boost",
		"/home/sheffler/src/rosetta/rifdock",
		"/home/sheffler/src/rosetta/for_rifdock/source/cmake/build_cxx11_omp",
		"/home/sheffler/src/rosetta/for_rifdock",
		"/home/sheffler/.config/sublime-text-3/Packages/NeoVintageous",
		"/home/sheffler/.config/sublime-text-3/Packages/Vintage_Dev",
		"/home/sheffler/rfd",
		"/home/sheffler/src/eigen",
		"/home/sheffler/rfdsym/lib/rf2aa/lib/Eigen",
		"/home/sheffler/willutil_cpp",
		"/home/sheffler/rf/rfd_clean",
		"/home/sheffler/rfdsym/lib/rf2aa/rf2aa",
		"/home/sheffler/rf/rfd_clean/rf_diffusion",
		"/home/sheffler/rf/rfd_tmp",
		"/home/sheffler/rf2ci",
		"/home/sheffler/src/willutil_cpp/willutil_cpp/homog",
		"/home/sheffler/src/willutil_cpp/willutil_cpp/tests",
		"/home/sheffler/rfdsym/lib/rf2aa",
		"/home/sheffler/rfdsym/rf2aa",
		"/home/sheffler/rfdsym/lib/rf2aa/data",
		"/home/sheffler/rf/rfsym",
		"/home/sheffler/rfdci",
		"/home/sheffler/venv/sci/lib/python3.12",
		"/home/sheffler/src/pymol-open-source",
		"/home/sheffler/rf/rfdci",
		"/home/sheffler/rf/rfd_ci",
		"/home/sheffler/rf/rfdsym",
		"/home/sheffler/src/EternalTerminal",
		"/home/sheffler/src/willutil",
		"/home/sheffler/src/rfdsym/.git/modules/lib/fused_mpnn/fused_mpnn",
		"/home/sheffler/src/rfd_ci",
		"/home/sheffler/pymol3",
		"/home/sheffler/src/rfsym",
		"/home/sheffler/src/rfd_clean/rf_diffusion",
		"/home/sheffler/src/rfd_clean/.git/modules/lib",
		"/home/sheffler/src/rfd_long",
		"/home/sheffler/project/hydrolase/subperm/outputs",
		"/home/sheffler/project/hydrolase/subperm/input",
		"/home/sheffler/src/rf_allatom_dj_merge",
		"/home/sheffler/src/rfdsym/.git/modules",
		"/home/sheffler/src/rfdsym/.git/modules/lib/rf2aa",
		"/home/sheffler/src/rfd_clean",
		"/home/sheffler/src/rf2aa_clean",
		"/home/sheffler/src/rf_diffusion_symmmotif_WHS_test",
		"/home/sheffler/src/rf_diffusion_symmmotif_HE",
		"/home/sheffler/src/rfsym/rf2aa",
		"/home/sheffler/src/rf_allatom_dj",
		"/home/sheffler/src/rfd_legacy",
		"/digs/home/sheffler/src/rfdsym",
		"/home/sheffler/src/rfdsym/pymol_config",
		"/home/sheffler/src/rfdsym",
		"/home/sheffler/src/rfd_pairsym",
		"/home/sheffler/src/rf_allatom/rfd_pairsym",
		"/home/sheffler/minecraft/dw120/world/serverconfig/ftbranks",
		"/home/sheffler/minecraft/dw120/config",
		"/home/sheffler/for/db/pymol_super",
		"/home/sheffler/src/rpxdock_master",
		"/home/sheffler/src/rf_allatom/integration_tests_output/230831_quick_c2_motif",
		"/home/sheffler/src/worms/worms",
		"/home/sheffler/.config/smplayer",
		"/home/sheffler/for/david/wills_pymol_crap",
		"/home/sheffler/src/rf_allatom",
		"/home/sheffler/project/multimotif/input/lanthanideCSD_matched_motifs/GAMFEH_0__0-1_2-3/0",
		"/digs/home/sheffler/for/david/wills_pymol_crap",
		"/digs/home/heisen/scripts/rf_diffusion",
		"/digs/home/heisen/scripts/diffusion_experiments/symm-diffusion_stable/rf_diffusion",
		"/digs/home/heisen/scripts/diffusion_experiments/will_templating/rf_diffusion",
		"/digs/home/heisen/scripts/diffusion_experiments",
		"/home/sheffler/src/rf_diffusion_helen",
		"/home/sheffler/tmp/qcpcode/qcprot",
		"/digs/home/sheffler/.local/lib/python3.10/site-packages/cppimport",
		"/home/sheffler/project/apptainers/rpxdock/rpxdock_apptainer/usr/local/lib/python3.10/dist-packages/cppimport",
		"/home/sheffler/src/rosetta/main/source/src/protocols/cryst",
		"/home/sheffler/src/BFF/SE3Transformer",
		"/home/sheffler/src/RF2-symm",
		"/home/sheffler/src/rf_diffusion_main",
		"/home/sheffler/apptainer",
		"/home/sheffler/src/rf_diffusion_xtal",
		"/digs/home/sheffler/src/rf_diffusion_main_230329",
		"/home/sheffler/src/rosetta/for_rifdock/source/src",
		"/home/sheffler/src/rosetta/for_rifdock/source/src/core/pose",
		"/home/sheffler/src/worms",
		"/home/sheffler/.conda/envs/willutil_pymol/lib/python3.8/site-packages/pymunk",
		"/digs/home/sheffler/project/diffusion/digstest/zhe_shunzhi",
		"/digs/home/sheffler/src/rf_diffusion_main/examples",
		"/home/sheffler/.pymol",
		"/home/sheffler/Documents/gm230203",
		"/home/sheffler/src/rf_diffusion",
		"/home/sheffler/src/idlefall/idlefall/data",
		"/digs/home/sheffler/src/BFF/rf_diffusion",
		"/home/sheffler/src/rf_diffusion_main/rf_diffusion",
		"/home/sheffler/src/pymunk/pymunk/examples",
		"/home/sheffler/src/idlefall",
		"/home/sheffler/project/diffusion",
		"/home/sheffler/src/wills_pymol_crap",
		"/home/sheffler/src/rpxdock_master/rpxdock",
		"/home/sheffler/src/rpxdock_mc",
		"/home/sheffler/src/rpxdock_asym",
		"/home/sheffler/src/rpxdock",
		"/home/sheffler/src/rf_diffusion/output",
		"/home/sheffler/debug/zhe/test_worms_2D-3D_withLHD/3D_xtals",
		"/home/sheffler/src/rpxdock_merge220513",
		"/home/sheffler/debug/zhe/test_worms_2D-3D_withLHD",
		"/home/sheffler/src/af2mc_main",
		"/home/sheffler/src/BFF",
		"/home/sheffler/src/willutil/willutil",
		"/digs/home/sheffler/src/rpxdock_merge220513",
		"/home/sheffler/debug/rpxdock/yang/merge",
		"/home/sheffler/debug/rpxdock/yang/merge/2022-08-19_test_rpxdock/dock",
		"/digs/home/sheffler/src/rpxdock_merge220513/rpxdock",
		"/oldlappy/mcdw18/config/Mekanism",
		"/oldlappy/mcdw18/config",
		"/oldlappy/mcdw18/world/serverconfig",
		"/oldlappy/mcdw18",
		"/home/sheffler/src/worms/repres",
		"/home/sheffler/Documents/GM220429",
		"/home/sheffler/Documents/GM22429/data",
		"/home/sheffler/src/worms_unittests",
		"/home/sheffler/miniconda3/envs/rpxdock/lib/python3.7/site-packages/cppimport",
		"/home/sheffler/src/af2mc",
		"/home/sheffler/src/hssp-3.1.5",
		"/home/sheffler/debug/af2"
	],
	"last_version": 4169,
	"last_window_id": 1340,
	"log_indexing": false,
	"next_update_check": 1721151501,
	"settings":
	{
		"new_window_full_screen": false,
		"new_window_height": 1078.0,
		"new_window_maximized": false,
		"new_window_position":
		[
			1.0,
			1.0
		],
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"rad",
						"randxform"
					],
					[
						"max",
						"max_size"
					],
					[
						"min",
						"min_size"
					],
					[
						"voxpo",
						"voxposinv"
					],
					[
						"voxp",
						"voxposinv"
					],
					[
						"out",
						"out_of_bounds"
					],
					[
						"wel",
						"welzl_bounding_sphere_tensor"
					],
					[
						"test_voxdock",
						"test_voxdock_c3"
					],
					[
						"test_tip",
						"test_tip_frames"
					],
					[
						"tip",
						"tip_atom_start"
					],
					[
						"numb",
						"numba_kernel_qcp_raw"
					],
					[
						"help",
						"helper_test_qcp_raw_cuda"
					],
					[
						"compu",
						"compute_rotation"
					],
					[
						"kpr",
						"kprint_simple"
					],
					[
						"int",
						"int16_t"
					],
					[
						"get",
						"qcp_scan_get_idx_rms"
					],
					[
						"kM",
						"kMatXT3"
					],
					[
						"qcp",
						"qcp_scan_cuda"
					],
					[
						"hel",
						"helper_test_qcp_scan_cuda"
					],
					[
						"test_q",
						"test_qcp_scan"
					],
					[
						"tr",
						"trxs"
					],
					[
						"__",
						"__restrict__"
					],
					[
						"sort",
						"sort_inplace_topk_kernel"
					],
					[
						"Tenso",
						"TensorOptions"
					],
					[
						"rand_unit_quat_",
						"rand_unit_quat_uniform"
					],
					[
						"qu",
						"quat_height"
					],
					[
						"test_ran",
						"test_rand_xform_angle"
					],
					[
						"cura",
						"curandStateXORWOW_t"
					],
					[
						"x",
						"xform"
					],
					[
						"eval",
						"eval_func_kernel"
					],
					[
						"conta",
						"contactend"
					],
					[
						"ab",
						"abstractproperty"
					],
					[
						"xyzvo",
						"xyzvox2"
					],
					[
						"test_",
						"test_Voxel_score_symcheck"
					],
					[
						"test_V",
						"test_Voxel_score_symcheck"
					],
					[
						"sym",
						"symclashdist"
					],
					[
						"kMat",
						"kMatX3"
					],
					[
						"crea",
						"create_voxel_grid_kernel"
					],
					[
						"blo",
						"blocks3d"
					],
					[
						"thre",
						"threadIdx"
					],
					[
						"_in",
						"_indep_type"
					],
					[
						"test_qcp_scan_",
						"test_qcp_scan_vis"
					],
					[
						"_",
						"_qcp_scan_checks"
					],
					[
						"ze",
						"zeros_like"
					],
					[
						"asu",
						"align_asu"
					],
					[
						"chi",
						"chiralxyz"
					],
					[
						"chiral",
						"chiralxyz"
					],
					[
						"atomi",
						"atomize_indeces"
					],
					[
						"atomize_in",
						"atomize_indices"
					],
					[
						"atm",
						"atomize_resnum2atomnames"
					],
					[
						"contig",
						"contig_atoms"
					],
					[
						"qcp_calc_rmsd_cuda_",
						"qcp_calc_rmsd_cuda_fixlen"
					],
					[
						"e",
						"exyz2"
					],
					[
						"dat",
						"data_ptr"
					],
					[
						"ex",
						"exyz2"
					],
					[
						"qcp_",
						"qcp_rmsd_raw_vec_f4"
					],
					[
						"sta",
						"state_size"
					],
					[
						"qcpk",
						"qcp_scan_rmsd_cuda_kernel"
					],
					[
						"qcp_sca",
						"qcp_scan_rmsd_cuda_kernel"
					],
					[
						"CHECK",
						"CHECK_INPUT"
					],
					[
						"igno",
						"ignoresym"
					],
					[
						"qcp_rm",
						"qcp_rmsd_raw_vec"
					],
					[
						"qcp_rms_r",
						"qcp_rmsd_raw_vec"
					],
					[
						"xyz",
						"xyz1_in"
					],
					[
						"build",
						"build_directory"
					],
					[
						"test_cal",
						"test_calcium_motif_no_guidepost"
					],
					[
						"conti",
						"contig_is_symmetric"
					],
					[
						"upda",
						"_update_orig"
					],
					[
						"apply",
						"apply_symmetry_pair"
					],
					[
						"slice",
						"slice2d"
					],
					[
						"_up",
						"_update_orig"
					],
					[
						"test_sym_ten",
						"test_sym_tensor"
					],
					[
						"cont",
						"contiguous"
					],
					[
						"sym_ten",
						"sym_tensor_types"
					],
					[
						"symten",
						"sym_tensor_types"
					],
					[
						"ori",
						"origval"
					],
					[
						"SYMTEN",
						"SYMTENTYPES"
					],
					[
						"_sy",
						"_type_maps"
					],
					[
						"sympair",
						"sympair_protein_only"
					],
					[
						"symma",
						"symmatrix"
					],
					[
						"_ty",
						"_type_maps"
					],
					[
						"T",
						"TwoDim"
					],
					[
						"_type",
						"_type_maps"
					],
					[
						"make",
						"makeclass"
					],
					[
						"test_sym",
						"test_sym_tensor_factory"
					],
					[
						"resh",
						"reshaped_vanilla"
					],
					[
						"is",
						"is_gp"
					],
					[
						"spr",
						"sproj_orig"
					],
					[
						"sp",
						"sproj_orig"
					],
					[
						"fie",
						"fields"
					],
					[
						"tran",
						"transform_indep"
					],
					[
						"inse",
						"insert_contig_pre_atomization"
					],
					[
						"transfor",
						"transform_indep"
					],
					[
						"indep",
						"indep_cond"
					],
					[
						"symm",
						"symmetrizable"
					],
					[
						"_set",
						"_setup_benchmark_array"
					],
					[
						"un",
						"untied_p2p"
					],
					[
						"rf",
						"rf_with_gradients"
					],
					[
						"move",
						"move_all_nonprot"
					],
					[
						"dis",
						"disable_all_fitting"
					],
					[
						"mat",
						"matchpair"
					],
					[
						"app",
						"apply_symmetry_pair"
					],
					[
						"sympa",
						"sympair_protein_only"
					],
					[
						"mth",
						"methodname"
					],
					[
						"value",
						"valuekind"
					],
					[
						"wei",
						"weights_pkl"
					],
					[
						"Ob",
						"ObserverTest"
					],
					[
						"show",
						"show_xyz_in_pymol"
					],
					[
						"sho",
						"show_xyz_in_pymol"
					],
					[
						"_ob",
						"_observer_classes"
					],
					[
						"foo",
						"foobar_called"
					],
					[
						"read_",
						"read_pkl"
					],
					[
						"map",
						"map_location"
					],
					[
						"idx",
						"idx_sym_to_sub"
					],
					[
						"SYMM",
						"SYMMETRIZED"
					],
					[
						"idx_asym",
						"idx_asym_to_sym"
					],
					[
						"idx_sym",
						"idx_sym_to_asu"
					],
					[
						"hydra",
						"hydra_sandbox"
					],
					[
						"exi",
						"exist_ok"
					],
					[
						"ali",
						"align_asu"
					],
					[
						"defa",
						"default_extra_params"
					],
					[
						"p",
						"pseudo_cycle"
					],
					[
						"con",
						"contig_str"
					],
					[
						"c",
						"contig_is_symmetric"
					],
					[
						"symmsub_",
						"symmsub_k"
					],
					[
						"symms",
						"symmsub_k"
					],
					[
						"SymAda",
						"SymAdaptNDArray"
					],
					[
						"mov",
						"movedasu"
					]
				]
			},
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 392.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"setsynconf",
						"Set Syntax: Git Config"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"prefer",
						"Preferences: Settings"
					],
					[
						"canc",
						"Build: Cancel"
					],
					[
						"ky",
						"Preferences: Key Bindings"
					],
					[
						"key",
						"Preferences: Key Bindings"
					],
					[
						"preferen",
						"Preferences: Settings"
					],
					[
						"save",
						"File: Save All"
					],
					[
						"keyb",
						"Preferences: Key Bindings"
					],
					[
						"settin",
						"Preferences: Settings"
					],
					[
						"neovinsett",
						"Preferences: NeoVintageous Settings"
					],
					[
						"creatbel",
						"Origami: Create Pane Below"
					],
					[
						"remo",
						"Package Control: Remove Package"
					],
					[
						"keybind",
						"Preferences: Key Bindings"
					],
					[
						"keybin",
						"Preferences: Key Bindings"
					],
					[
						"prefersett",
						"Preferences: Settings"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"setting",
						"Preferences: Settings"
					],
					[
						"import",
						"Py Rock: Import Symbol"
					],
					[
						"inse",
						"Insert Nums"
					],
					[
						"ins",
						"Insert Nums"
					],
					[
						"sor",
						"SortBy: Alphabetically"
					],
					[
						"dest",
						"Origami: Destroy Current Pane"
					],
					[
						"debug",
						"Package Control: Disable Debug Mode"
					],
					[
						"lsp",
						"LSP: Format File"
					],
					[
						"can",
						"Build: Cancel"
					],
					[
						"preferpy",
						"Preferences: LSP-pyright Settings"
					],
					[
						"cacn",
						"Build: Cancel"
					],
					[
						"sort",
						"SortBy: Alphabetically"
					],
					[
						"ui",
						"UI: Select Color Scheme"
					],
					[
						"insnu",
						"Insert Nums"
					],
					[
						"clan",
						"Clang Format: Format Selection"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"insnum",
						"Insert Nums"
					],
					[
						"low",
						"Convert Case: Lower Case"
					],
					[
						"sav",
						"File: Save All"
					],
					[
						"inser",
						"Insert Nums"
					],
					[
						"mer",
						"Sublime Merge: Open Repository"
					],
					[
						"merge",
						"Sublime Merge: Open Repository"
					],
					[
						"cac",
						"Build: Cancel"
					],
					[
						"sortl",
						"Sort Lines"
					],
					[
						"buil",
						"Build: Cancel"
					],
					[
						"saveal",
						"File: Save All"
					],
					[
						"refer",
						"Project: Refresh Folders"
					],
					[
						"pref",
						"Preferences: Settings"
					],
					[
						"removepa",
						"Package Control: Remove Package"
					],
					[
						"forma",
						"LSP: Format File"
					],
					[
						"ruff",
						"Preferences: LSP-ruff Settings"
					],
					[
						"format",
						"LSP: Format File"
					],
					[
						"edit",
						"Project: Edit Project"
					],
					[
						"creap",
						"Origami: Create Pane on the Right"
					],
					[
						"prv",
						"PackageResourceViewer: Open Resource"
					],
					[
						"edi",
						"Project: Edit Project"
					],
					[
						"creri",
						"Origami: Create Pane on the Right"
					],
					[
						"instllpa",
						"Package Control: Install Package"
					],
					[
						"openai",
						"OpenAI: New Message"
					],
					[
						"crepa",
						"Origami: Create Pane on the Left"
					],
					[
						"proj",
						"Project: Edit Project"
					],
					[
						"crele",
						"Origami: Create Pane on the Left"
					],
					[
						"clea",
						"Bookmarks: Clear All"
					],
					[
						"braek",
						"Python Breakpoints: Toggle"
					],
					[
						"save pro",
						"Project: Save As"
					],
					[
						"colo",
						"UI: Select Color Scheme"
					],
					[
						"uicol",
						"UI: Select Color Scheme"
					],
					[
						"color",
						"UI: Select Color Scheme"
					],
					[
						"crae",
						"Origami: Create Pane with File Below"
					],
					[
						"rn",
						"Rename File"
					],
					[
						"rena",
						"Rename File"
					],
					[
						"rename",
						"Rename File"
					],
					[
						"craepa",
						"Origami: Create Pane Above"
					],
					[
						"text",
						"Set Syntax: Plain Text"
					],
					[
						"python",
						"Set Syntax: Python"
					],
					[
						"cnc",
						"ColorSchemeSelector: Next Color Scheme"
					],
					[
						"fold",
						"Code Folding: Fold All"
					],
					[
						"ccanc",
						"Package Control: Advanced Install Package"
					],
					[
						"cahc",
						"Package Control: Add Channel"
					],
					[
						"dist",
						"View: Toggle Distraction Free"
					],
					[
						"zoom",
						"Origami: Zoom/Unzoom Current Pane (Toggle Zoom)"
					],
					[
						"creabel",
						"Origami: Create Pane Below"
					],
					[
						"soa",
						"SortBy: Alphabetically"
					],
					[
						"tab",
						"View: Toggle Tabs"
					],
					[
						"move",
						"Origami: Move File to Pane on the Right"
					],
					[
						"tabs",
						"View: Toggle Tabs"
					],
					[
						"craebelo",
						"Origami: Create Pane Below"
					],
					[
						"bel",
						"Origami: Create Pane Below"
					],
					[
						"crea",
						"Origami: Create Pane on the Right"
					],
					[
						"crerig",
						"Origami: Create Pane on the Right"
					],
					[
						"trarigh",
						"Origami: Destroy Pane on the Right"
					],
					[
						"minim",
						"View: Toggle Minimap"
					],
					[
						"instll",
						"Package Control: Install Package"
					],
					[
						"col",
						"UI: Select Color Scheme"
					],
					[
						"install pa",
						"Package Control: Install Package"
					],
					[
						"colorcomm",
						"ColorSchemeSelector: Random Color Scheme"
					],
					[
						"me",
						"View: Toggle Menu"
					],
					[
						"de",
						"Origami: Destroy Current Pane"
					],
					[
						"menu",
						"View: Toggle Menu"
					],
					[
						"sett",
						"Preferences: Settings"
					],
					[
						"togg",
						"View: Toggle Menu"
					],
					[
						"cerri",
						"Origami: Create Pane on the Right"
					],
					[
						"detrc",
						"Origami: Destroy Current Pane"
					],
					[
						"sypy",
						"Set Syntax: Python"
					],
					[
						"uis",
						"UI: Select Color Scheme"
					],
					[
						"uic",
						"UI: Select Color Scheme"
					],
					[
						"selecolo",
						"UI: Select Color Scheme"
					],
					[
						"in",
						"Package Control: Install Package"
					],
					[
						"enstai",
						"Package Control: Satisfy Dependencies"
					],
					[
						"yap",
						"PyYapf: Format Document"
					],
					[
						"desp",
						"Origami: Destroy Current Pane"
					],
					[
						"for",
						"Clang Format: Format Selection"
					],
					[
						"ya",
						"PyYapf: Format Document"
					],
					[
						"runte",
						"Terminus Utilities: Generate User Theme"
					],
					[
						"buildwi",
						"Build With: test_align_code"
					],
					[
						"pyrigh",
						"Preferences: LSP-pyright Settings"
					],
					[
						"crebel",
						"Origami: Create Pane Below"
					],
					[
						"to",
						"View: Toggle Menu"
					],
					[
						"project",
						"Project: Edit Project"
					],
					[
						"unfo",
						"Code Folding: Unfold All"
					],
					[
						"remopa",
						"Package Control: Remove Package"
					],
					[
						"reopa",
						"Package Control: Remove Package"
					],
					[
						"synpy",
						"Set Syntax: Python"
					],
					[
						"synpay",
						"Set Syntax: Python"
					],
					[
						"pyt",
						"Set Syntax: Python"
					],
					[
						"creatpab",
						"Origami: Create Pane Below"
					],
					[
						"create",
						"Origami: Create Pane on the Right"
					],
					[
						"destr",
						"Origami: Destroy Current Pane"
					],
					[
						"createpanlef",
						"Origami: Create Pane on the Left"
					]
				],
				"width": 488.0
			},
			"console":
			{
				"height": 283.0,
				"history":
				[
					"sublime.log_commands(True)",
					"print()\n",
					"print()",
					"clear",
					"os.environ['PATH']",
					"print(sys.version)",
					"import os",
					"print(sys.path)",
					"print(sys.executable)",
					"import sys",
					"os.environ['PATH']",
					"import os",
					"sys.path",
					"import sys",
					"print(os.environ['PATH'])",
					"import os",
					"print(os.environ['PATH'])",
					"import os",
					"print(os.environ['PATH'])",
					"import os",
					"print(sys.executable)",
					"print sys.executable",
					"import sys"
				]
			},
			"distraction_free":
			{
				"menu_visible": false,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": true,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/sheffler/software/graphbolt/apps/Makefile",
				"/home/sheffler/.config/fish/config.fish",
				"/home/sheffler/.config/sublime-text-3/Packages/User/Celeste Dark.sublime-color-scheme",
				"/home/sheffler/.config/kitty/kitty.conf",
				"/home/sheffler/.config/qtile/config.py",
				"/home/sheffler/.config/qtile/.yapf.style",
				"/home/sheffler/.config/.yapf.style",
				"/home/sheffler/.profile",
				"/etc/systemd/sleep.conf",
				"/home/sheffler/rfd_tip/.github/workflows/run_tests_digs.yml",
				"/home/sheffler/rfd_tip/ci/run_pytest.sh",
				"/home/sheffler/rfd_tip/ci/checkout_submodules.sh",
				"/home/sheffler/rfd/rf_diffusion/test_inference.py",
				"/home/sheffler/rfdsym/ide/whs/notes.txt",
				"/home/sheffler/rfdsym/ide/whs/rf_diffusion.sublime-project",
				"/home/sheffler/rfdsym/sublime_build.log",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/voxel_viz.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/voxdock.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/voxel/test_voxel.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_semantics.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_conditions.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/samp/test_tip_atom_placer.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/tip_atom_placer.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fit/qcp_rms.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/fit/test_qcp_rms.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/voxel.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_sampling_cuda.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/samp/test_sampling.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/sampling.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_dilated_int.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/voxel/test_voxdock.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/cudafunc.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/rf2aa_util.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_sampling.cpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_shapes.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_sampling.cu",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/testutil.py",
				"/home/sheffler/rfdsym/lib/rf2aa/pytest.ini",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_model.py",
				"/home/sheffler/rfdsym/rf_diffusion/tests/integration/test_sym_inference.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_benchmark.py",
				"/home/sheffler/rfdsym/ide/whs/change_build_file.py",
				"/home/sheffler/project/neorifgen/dna_example.pdb",
				"/home/sheffler/.pymolrc",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/cudabuild.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fit/_qcp_rms_cuda.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/fit/test_qcp_scan.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/rf2aa_cuda_util.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_tip_atom_placer.cpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_tip_atom_placer.cu",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_tip_atom_placer_cuda.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/tip_atom_placer_cuda.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/_voxel.cpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/dock/rigid_body.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/sampling_cuda.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/bvh/test_bvh_numba.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/sampling/test_sampling.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/_sampling.cpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/_sampling_cuda.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/sampling.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_sampler.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fit/qcp_scan.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/_qcp_rms_cuda.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/_qcp_rms.cpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/fitting/test_qcp_scan.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/fitting/test_qcp_rms.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/chemical.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_slice.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_fitting.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fit/qcp_rms_cuda.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fit/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/qcp_rms.py",
				"/home/sheffler/rfd/pytest.ini",
				"/home/sheffler/rfdsym/rf_diffusion/run_inference.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_manager.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/sym/test_sym_manager.py",
				"/home/sheffler/rfdsym/rf_diffusion/tests/sym/test_sym_indep.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_check.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/qcp_scan.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/__init__.py",
				"/home/sheffler/rfdsym/pytest.ini",
				"/home/sheffler/rfdsym/rf_diffusion/exec/rf_diffusion_aa.spec",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/voxel_cuda.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/qcp_rms_cuda.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/sampling_cuda.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/_qcp_rms.cu",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/data/sampler.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/_sampling.cu",
				"/home/sheffler/rfdsym/rf_diffusion/guide_posts.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/observer/observer.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/model/Track_module.py",
				"/home/sheffler/rfdsym/rf_diffusion/observer/pymol_observer.py",
				"/home/sheffler/rfdsym/pyproject.toml",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_options.py",
				"/home/sheffler/rfdsym/rf_diffusion/config/inference/sym.yaml",
				"/home/sheffler/rfdsym/rf_diffusion/inference/model_runners.py",
				"/home/sheffler/rfdsym/rf_diffusion/sym/sym_indep.py",
				"/home/sheffler/rfdsym/rf_diffusion/sym/rfd_sym_manager.py",
				"/home/sheffler/.config/sublime-text-3/Packages/User/clang_format.sublime-settings",
				"/home/sheffler/rfdsym/ci/check_test_results.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/_voxel.cu",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/cuda/test_cudafunc.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tools/lazy_import.py",
				"/home/sheffler/rfdsym/.github/workflows/run_tests_digs.yml",
				"/home/sheffler/rfdsym/rf_diffusion/conftest.py",
				"/home/sheffler/rfdsym/rf_diffusion/viz/viz_indep_pymol.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_adapt.py",
				"/home/sheffler/rfdsym/.clang-format",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/half.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel_cuda.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tools/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/_rms.cpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/_rms_cuda.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/_rms.cu",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/cuda_util.hpp",
				"/home/sheffler/rfdsym/.ruff.toml",
				"/home/sheffler/rfdsym/rf_diffusion/benchmark/input/serine_hydrolase/siteC_x10.pdb",
				"/home/sheffler/rfdsym/rf_diffusion/benchmark/input/serine_hydrolase/siteC_x20.pdb",
				"/home/sheffler/rfdsym/rf_diffusion/benchmark/input/serine_hydrolase/siteC.pdb",
				"/home/sheffler/rfdsym/rf_diffusion/aa_model.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/rf2_sym_manager.py"
			],
			"find":
			{
				"height": 44.0
			},
			"find_in_files":
			{
				"height": 213.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"col",
					"home",
					"pl",
					"x",
					"')\n",
					"toggle_maximize",
					"mod",
					"maximi"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
				],
				"reverse": false,
				"scrollbar_highlights": true,
				"show_context": false,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 44.0
			},
			"input":
			{
				"height": 224.0
			},
			"menu_visible": false,
			"output.LSP Log Panel":
			{
				"height": 0.0
			},
			"output.SublimeLinter":
			{
				"height": 0.0
			},
			"output.diagnostics":
			{
				"height": 0.0
			},
			"output.exec":
			{
				"height": 33.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"pinned_build_system": "runtests.py",
			"replace":
			{
				"height": 136.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"yapf",
						".yapf.style"
					],
					[
						"conf",
						"config.py"
					],
					[
						"checko",
						"ci/checkout_submodules.sh"
					],
					[
						"submo",
						"ci/checkout_submodules.sh"
					],
					[
						"github",
						".github/workflows/run_tests_digs.yml"
					],
					[
						"runpyt",
						"ci/run_pytest.sh"
					],
					[
						"dila",
						"lib/rf2aa/rf2aa/samp/_dilated_int.hpp"
					],
					[
						"smahpp",
						"lib/rf2aa/rf2aa/samp/_sampling_cuda.hpp"
					],
					[
						"test_samp",
						"lib/rf2aa/rf2aa/tests/samp/test_sampling.py"
					],
					[
						"sampl",
						"lib/rf2aa/rf2aa/samp/sampling.py"
					],
					[
						"voxehpp",
						"lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp"
					],
					[
						"voxel",
						"lib/rf2aa/rf2aa/voxel/voxel.py"
					],
					[
						"testvoxdo",
						"lib/rf2aa/rf2aa/tests/voxel/test_voxdock.py"
					],
					[
						"test_qcp",
						"lib/rf2aa/rf2aa/tests/fit/test_qcp_rms.py"
					],
					[
						"tip_atom_pla",
						"lib/rf2aa/rf2aa/samp/tip_atom_placer.py"
					],
					[
						"test_tip",
						"lib/rf2aa/rf2aa/tests/samp/test_tip_atom_placer.py"
					],
					[
						"tests_ini",
						"lib/rf2aa/rf2aa/tests/__init__.py"
					],
					[
						"test_cond",
						"lib/rf2aa/rf2aa/tests/test_conditions.py"
					],
					[
						"test_sema",
						"lib/rf2aa/rf2aa/tests/test_semantics.py"
					],
					[
						"testvox",
						"lib/rf2aa/rf2aa/tests/voxel/test_voxel.py"
					],
					[
						"utihpp",
						"lib/rf2aa/rf2aa/cuda/rf2aa_util.hpp"
					],
					[
						"sampcpp",
						"lib/rf2aa/rf2aa/samp/_sampling.cpp"
					],
					[
						"shap",
						"lib/rf2aa/rf2aa/samp/_shapes.hpp"
					],
					[
						"sampli",
						"lib/rf2aa/rf2aa/samp/sampling.py"
					],
					[
						"test_sam",
						"lib/rf2aa/rf2aa/tests/samp/test_sampling.py"
					],
					[
						"voxelhpp",
						"lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp"
					],
					[
						"test_vox",
						"lib/rf2aa/rf2aa/tests/voxel/test_voxel.py"
					],
					[
						"vox.py",
						"lib/rf2aa/rf2aa/voxel/voxel.py"
					],
					[
						"utilhpp",
						"lib/rf2aa/rf2aa/cuda/rf2aa_util.hpp"
					],
					[
						"samplcpp",
						"lib/rf2aa/rf2aa/samp/_sampling.cpp"
					],
					[
						"samplhpp",
						"lib/rf2aa/rf2aa/samp/_sampling_cuda.hpp"
					],
					[
						"voxdo",
						"lib/rf2aa/rf2aa/voxel/voxdock.py"
					],
					[
						"voxelvi",
						"lib/rf2aa/rf2aa/voxel/voxel_viz.py"
					],
					[
						"_samplcu",
						"lib/rf2aa/rf2aa/samp/_sampling.cu"
					],
					[
						"samplingcpp",
						"lib/rf2aa/rf2aa/samp/_sampling.cpp"
					],
					[
						"samplin",
						"lib/rf2aa/rf2aa/samp/sampling.py"
					],
					[
						"voxhpp",
						"lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp"
					],
					[
						"test_condi",
						"lib/rf2aa/rf2aa/tests/test_conditions.py"
					],
					[
						"chan",
						"ide/whs/change_build_file.py"
					],
					[
						"testsinit",
						"lib/rf2aa/rf2aa/tests/__init__.py"
					],
					[
						"voxe",
						"lib/rf2aa/rf2aa/voxel/voxel.py"
					],
					[
						"cudabui",
						"lib/rf2aa/rf2aa/cuda/cudabuild.py"
					],
					[
						"sampinit",
						"lib/rf2aa/rf2aa/samp/__init__.py"
					],
					[
						"tipatom",
						"lib/rf2aa/rf2aa/samp/tip_atom_placer.py"
					],
					[
						"testtipa",
						"lib/rf2aa/rf2aa/tests/samp/test_tip_atom_placer.py"
					],
					[
						"samp.cpp",
						"lib/rf2aa/rf2aa/samp/_sampling.cpp"
					],
					[
						"tipatompl",
						"lib/rf2aa/rf2aa/samp/_tip_atom_placer.cpp"
					],
					[
						"sampling",
						"lib/rf2aa/rf2aa/samp/sampling.py"
					],
					[
						"voxel.py",
						"lib/rf2aa/rf2aa/voxel/voxel.py"
					],
					[
						"voxcpp",
						"lib/rf2aa/rf2aa/voxel/_voxel.cpp"
					],
					[
						"cudaut",
						"lib/rf2aa/rf2aa/cuda/rf2aa_cuda_util.hpp"
					],
					[
						"_sampcud",
						"lib/rf2aa/rf2aa/samp/_sampling_cuda.hpp"
					],
					[
						"samp.",
						"lib/rf2aa/rf2aa/samp/sampling.py"
					],
					[
						"tsetsamp",
						"lib/rf2aa/rf2aa/tests/samp/test_sampling.py"
					],
					[
						"qcphpp",
						"lib/rf2aa/rf2aa/fit/_qcp_rms_cuda.hpp"
					],
					[
						"testqcpsca",
						"lib/rf2aa/rf2aa/tests/fit/test_qcp_scan.py"
					],
					[
						"smaplcpp",
						"lib/rf2aa/rf2aa/samp/_sampling.cpp"
					],
					[
						"samplcuhp",
						"lib/rf2aa/rf2aa/samp/_sampling_cuda.hpp"
					],
					[
						"sampcuda",
						"lib/rf2aa/rf2aa/samp/sampling_cuda.py"
					],
					[
						"cuda",
						"lib/rf2aa/rf2aa/cuda/cudabuild.py"
					],
					[
						"vox",
						"lib/rf2aa/rf2aa/tests/voxel/test_voxdock.py"
					],
					[
						"rf2init",
						"lib/rf2aa/rf2aa/__init__.py"
					],
					[
						"smplcpp",
						"lib/rf2aa/rf2aa/sampling/_sampling.cpp"
					],
					[
						"test_samplin",
						"lib/rf2aa/rf2aa/tests/sampling/test_sampling.py"
					],
					[
						"test_sa",
						"lib/rf2aa/rf2aa/tests/test_sampler.py"
					],
					[
						"testqcpsc",
						"lib/rf2aa/rf2aa/tests/fit/test_qcp_scan.py"
					],
					[
						"qcprmspy",
						"lib/rf2aa/rf2aa/fit/qcp_rms.py"
					],
					[
						"test_qc",
						"lib/rf2aa/rf2aa/tests/fit/test_qcp_rms.py"
					],
					[
						"test_qcp_sca",
						"lib/rf2aa/rf2aa/tests/fit/test_qcp_scan.py"
					],
					[
						"numba",
						"lib/rf2aa/rf2aa/tests/bvh/test_bvh_numba.py"
					],
					[
						"qcp_hpp",
						"lib/rf2aa/rf2aa/fitting/_qcp_rms_cuda.hpp"
					],
					[
						"qcpcpp",
						"lib/rf2aa/rf2aa/fitting/_qcp_rms.cpp"
					],
					[
						"test_qp",
						"lib/rf2aa/rf2aa/tests/fitting/test_qcp_rms.py"
					],
					[
						"qcp_r",
						"lib/rf2aa/rf2aa/fitting/qcp_rms.py"
					],
					[
						"test_qcprms",
						"lib/rf2aa/rf2aa/tests/fitting/test_qcp_rms.py"
					],
					[
						"rms.cpp",
						"lib/rf2aa/rf2aa/fitting/_qcp_rms.cpp"
					],
					[
						"rms",
						"lib/rf2aa/rf2aa/fitting/_qcp_rms_cuda.hpp"
					],
					[
						"qcpr",
						"lib/rf2aa/rf2aa/fitting/qcp_rms.py"
					],
					[
						"cudabu",
						"lib/rf2aa/rf2aa/cuda/cudabuild.py"
					],
					[
						"testnub",
						"lib/rf2aa/rf2aa/tests/bvh/test_bvh_numba.py"
					],
					[
						"cudaini",
						"lib/rf2aa/rf2aa/cuda/__init__.py"
					],
					[
						"smpl",
						"lib/rf2aa/rf2aa/sampling/sampling.py"
					],
					[
						"pytest.ini",
						"pytest.ini"
					],
					[
						"spec",
						"rf_diffusion/exec/rf_diffusion_aa.spec"
					],
					[
						"voxvi",
						"lib/rf2aa/rf2aa/voxel/voxel_viz.py"
					],
					[
						"cudafun",
						"lib/rf2aa/rf2aa/cuda/cudafunc.py"
					],
					[
						"voxelini",
						"lib/rf2aa/rf2aa/voxel/__init__.py"
					],
					[
						"voxeehpp",
						"lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp"
					],
					[
						"rmscu",
						"lib/rf2aa/rf2aa/fitting/_qcp_rms_cuda.hpp"
					],
					[
						"qcp_sca",
						"lib/rf2aa/rf2aa/fitting/qcp_scan.py"
					],
					[
						"testrms",
						"lib/rf2aa/rf2aa/tests/fitting/test_qcp_rms.py"
					],
					[
						"qcpscan",
						"lib/rf2aa/rf2aa/fitting/qcp_scan.py"
					],
					[
						"tetqcsc",
						"~/rfdsym/lib/rf2aa/rf2aa/tests/fitting/test_qcp_scan.py"
					],
					[
						"fittinini",
						"lib/rf2aa/rf2aa/fitting/__init__.py"
					],
					[
						"qcp_rms",
						"lib/rf2aa/rf2aa/fitting/qcp_rms.py"
					],
					[
						"cudautihpp",
						"lib/rf2aa/rf2aa/cuda/rf2aa_cuda_util.hpp"
					],
					[
						"cuda.py",
						"lib/rf2aa/rf2aa/voxel/voxel_cuda.py"
					],
					[
						"_cuda.py",
						"lib/rf2aa/rf2aa/sampling/sampling_cuda.py"
					],
					[
						"_cuda",
						"lib/rf2aa/rf2aa/sampling/sampling_cuda.py"
					],
					[
						"cudainit",
						"lib/rf2aa/rf2aa/cuda/__init__.py"
					],
					[
						"rmscuda",
						"lib/rf2aa/rf2aa/fitting/qcp_rms_cuda.py"
					],
					[
						"qcprmscpp",
						"lib/rf2aa/rf2aa/fitting/_qcp_rms.cpp"
					],
					[
						"samhpp",
						"lib/rf2aa/rf2aa/sampling/_sampling_cuda.hpp"
					],
					[
						"qcp",
						"lib/rf2aa/rf2aa/fitting/_qcp_rms.cu"
					],
					[
						"test_qcp_rm",
						"lib/rf2aa/rf2aa/tests/fitting/test_qcp_rms.py"
					],
					[
						"test_symin",
						"rf_diffusion/tests/sym/test_sym_indep.py"
					],
					[
						"symman",
						"lib/rf2aa/rf2aa/sym/sym_manager.py"
					],
					[
						"test_symma",
						"lib/rf2aa/rf2aa/tests/sym/test_sym_manager.py"
					],
					[
						"voxcu",
						"lib/rf2aa/rf2aa/voxel/voxel_cuda.py"
					],
					[
						"samplingcu",
						"lib/rf2aa/rf2aa/sampling/sampling_cuda.py"
					],
					[
						"testsam",
						"lib/rf2aa/rf2aa/tests/sampling/test_sampling.py"
					],
					[
						"samplpy",
						"lib/rf2aa/rf2aa/data/sampler.py"
					],
					[
						"sam",
						"lib/rf2aa/rf2aa/sampling/_sampling.cu"
					],
					[
						"voxeh",
						"lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp"
					],
					[
						"samcuda",
						"lib/rf2aa/rf2aa/sampling/_sampling_cuda.hpp"
					],
					[
						"cuda_ut",
						"lib/rf2aa/rf2aa/cuda/rf2aa_cuda_util.hpp"
					],
					[
						"samplcu",
						"lib/rf2aa/rf2aa/sampling/sampling_cuda.py"
					],
					[
						"rf2aaini",
						"lib/rf2aa/rf2aa/__init__.py"
					],
					[
						"vox.cu",
						"lib/rf2aa/rf2aa/voxel/_voxel.cu"
					],
					[
						"voxini",
						"lib/rf2aa/rf2aa/voxel/__init__.py"
					],
					[
						"vox.hpp",
						"lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp"
					],
					[
						"testcuda",
						"lib/rf2aa/rf2aa/tests/cuda/test_cudafunc.py"
					],
					[
						"vox.cpp",
						"lib/rf2aa/rf2aa/voxel/_voxel.cpp"
					],
					[
						"testcu",
						"lib/rf2aa/rf2aa/tests/cuda/test_cudafunc.py"
					],
					[
						"cudaf",
						"lib/rf2aa/rf2aa/cuda/cudafunc.py"
					],
					[
						"subli",
						"sublime_build.log"
					],
					[
						"util.hpp",
						"lib/rf2aa/rf2aa/cuda/rf2aa_util.hpp"
					],
					[
						"_vox",
						"lib/rf2aa/rf2aa/voxel/_voxel.cpp"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 335.0,
				"last_filter": "__deepc",
				"selected_items":
				[
					[
						"__deepc",
						"__deepcopy__"
					],
					[
						"fillrom",
						"fill_from_contiguous"
					],
					[
						"cretestsym",
						"create_test_sym_manager"
					],
					[
						"inserco",
						"insert_contig_pre_atomization"
					],
					[
						"insercon",
						"insert_contig_pre_atomization"
					],
					[
						"insercont",
						"insert_contig"
					],
					[
						"set_kind",
						"set_kind"
					],
					[
						"symindep",
						"SymAdaptIndep"
					],
					[
						"unsym",
						"move_unsym_to_match_asu"
					],
					[
						"set_nstep",
						"set_nstep"
					],
					[
						"mounsym",
						"move_unsym_to_match_asu"
					],
					[
						"testsymconti",
						"test_sym_contig"
					],
					[
						"applypair",
						"apply_symmetry_pair"
					]
				],
				"width": 759.0
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 323.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 2110.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"rad",
						"randxform"
					],
					[
						"max",
						"max_size"
					],
					[
						"min",
						"min_size"
					],
					[
						"voxpo",
						"voxposinv"
					],
					[
						"voxp",
						"voxposinv"
					],
					[
						"out",
						"out_of_bounds"
					],
					[
						"wel",
						"welzl_bounding_sphere_tensor"
					],
					[
						"test_voxdock",
						"test_voxdock_c3"
					],
					[
						"test_tip",
						"test_tip_frames"
					],
					[
						"tip",
						"tip_atom_start"
					],
					[
						"numb",
						"numba_kernel_qcp_raw"
					],
					[
						"help",
						"helper_test_qcp_raw_cuda"
					],
					[
						"compu",
						"compute_rotation"
					],
					[
						"kpr",
						"kprint_simple"
					],
					[
						"int",
						"int16_t"
					],
					[
						"get",
						"qcp_scan_get_idx_rms"
					],
					[
						"kM",
						"kMatXT3"
					],
					[
						"qcp",
						"qcp_scan_cuda"
					],
					[
						"hel",
						"helper_test_qcp_scan_cuda"
					],
					[
						"test_q",
						"test_qcp_scan"
					],
					[
						"tr",
						"trxs"
					],
					[
						"__",
						"__restrict__"
					],
					[
						"sort",
						"sort_inplace_topk_kernel"
					],
					[
						"Tenso",
						"TensorOptions"
					],
					[
						"rand_unit_quat_",
						"rand_unit_quat_uniform"
					],
					[
						"qu",
						"quat_height"
					],
					[
						"test_ran",
						"test_rand_xform_angle"
					],
					[
						"cura",
						"curandStateXORWOW_t"
					],
					[
						"x",
						"xform"
					],
					[
						"eval",
						"eval_func_kernel"
					],
					[
						"conta",
						"contactend"
					],
					[
						"ab",
						"abstractproperty"
					],
					[
						"xyzvo",
						"xyzvox2"
					],
					[
						"test_",
						"test_Voxel_score_symcheck"
					],
					[
						"test_V",
						"test_Voxel_score_symcheck"
					],
					[
						"sym",
						"symclashdist"
					],
					[
						"kMat",
						"kMatX3"
					],
					[
						"crea",
						"create_voxel_grid_kernel"
					],
					[
						"blo",
						"blocks3d"
					],
					[
						"thre",
						"threadIdx"
					],
					[
						"_in",
						"_indep_type"
					],
					[
						"test_qcp_scan_",
						"test_qcp_scan_vis"
					],
					[
						"_",
						"_qcp_scan_checks"
					],
					[
						"ze",
						"zeros_like"
					],
					[
						"asu",
						"align_asu"
					],
					[
						"chi",
						"chiralxyz"
					],
					[
						"chiral",
						"chiralxyz"
					],
					[
						"atomi",
						"atomize_indeces"
					],
					[
						"atomize_in",
						"atomize_indices"
					],
					[
						"atm",
						"atomize_resnum2atomnames"
					],
					[
						"contig",
						"contig_atoms"
					],
					[
						"qcp_calc_rmsd_cuda_",
						"qcp_calc_rmsd_cuda_fixlen"
					],
					[
						"e",
						"exyz2"
					],
					[
						"dat",
						"data_ptr"
					],
					[
						"ex",
						"exyz2"
					],
					[
						"qcp_",
						"qcp_rmsd_raw_vec_f4"
					],
					[
						"sta",
						"state_size"
					],
					[
						"qcpk",
						"qcp_scan_rmsd_cuda_kernel"
					],
					[
						"qcp_sca",
						"qcp_scan_rmsd_cuda_kernel"
					],
					[
						"CHECK",
						"CHECK_INPUT"
					],
					[
						"igno",
						"ignoresym"
					],
					[
						"qcp_rm",
						"qcp_rmsd_raw_vec"
					],
					[
						"qcp_rms_r",
						"qcp_rmsd_raw_vec"
					],
					[
						"xyz",
						"xyz1_in"
					],
					[
						"build",
						"build_directory"
					],
					[
						"test_cal",
						"test_calcium_motif_no_guidepost"
					],
					[
						"conti",
						"contig_is_symmetric"
					],
					[
						"upda",
						"_update_orig"
					],
					[
						"apply",
						"apply_symmetry_pair"
					],
					[
						"slice",
						"slice2d"
					],
					[
						"_up",
						"_update_orig"
					],
					[
						"test_sym_ten",
						"test_sym_tensor"
					],
					[
						"cont",
						"contiguous"
					],
					[
						"sym_ten",
						"sym_tensor_types"
					],
					[
						"symten",
						"sym_tensor_types"
					],
					[
						"ori",
						"origval"
					],
					[
						"SYMTEN",
						"SYMTENTYPES"
					],
					[
						"_sy",
						"_type_maps"
					],
					[
						"sympair",
						"sympair_protein_only"
					],
					[
						"symma",
						"symmatrix"
					],
					[
						"_ty",
						"_type_maps"
					],
					[
						"T",
						"TwoDim"
					],
					[
						"_type",
						"_type_maps"
					],
					[
						"make",
						"makeclass"
					],
					[
						"test_sym",
						"test_sym_tensor_factory"
					],
					[
						"resh",
						"reshaped_vanilla"
					],
					[
						"is",
						"is_gp"
					],
					[
						"spr",
						"sproj_orig"
					],
					[
						"sp",
						"sproj_orig"
					],
					[
						"fie",
						"fields"
					],
					[
						"tran",
						"transform_indep"
					],
					[
						"inse",
						"insert_contig_pre_atomization"
					],
					[
						"transfor",
						"transform_indep"
					],
					[
						"indep",
						"indep_cond"
					],
					[
						"symm",
						"symmetrizable"
					],
					[
						"_set",
						"_setup_benchmark_array"
					],
					[
						"un",
						"untied_p2p"
					],
					[
						"rf",
						"rf_with_gradients"
					],
					[
						"move",
						"move_all_nonprot"
					],
					[
						"dis",
						"disable_all_fitting"
					],
					[
						"mat",
						"matchpair"
					],
					[
						"app",
						"apply_symmetry_pair"
					],
					[
						"sympa",
						"sympair_protein_only"
					],
					[
						"mth",
						"methodname"
					],
					[
						"value",
						"valuekind"
					],
					[
						"wei",
						"weights_pkl"
					],
					[
						"Ob",
						"ObserverTest"
					],
					[
						"show",
						"show_xyz_in_pymol"
					],
					[
						"sho",
						"show_xyz_in_pymol"
					],
					[
						"_ob",
						"_observer_classes"
					],
					[
						"foo",
						"foobar_called"
					],
					[
						"read_",
						"read_pkl"
					],
					[
						"map",
						"map_location"
					],
					[
						"idx",
						"idx_sym_to_sub"
					],
					[
						"SYMM",
						"SYMMETRIZED"
					],
					[
						"idx_asym",
						"idx_asym_to_sym"
					],
					[
						"idx_sym",
						"idx_sym_to_asu"
					],
					[
						"hydra",
						"hydra_sandbox"
					],
					[
						"exi",
						"exist_ok"
					],
					[
						"ali",
						"align_asu"
					],
					[
						"defa",
						"default_extra_params"
					],
					[
						"p",
						"pseudo_cycle"
					],
					[
						"con",
						"contig_str"
					],
					[
						"c",
						"contig_is_symmetric"
					],
					[
						"symmsub_",
						"symmsub_k"
					],
					[
						"symms",
						"symmsub_k"
					],
					[
						"SymAda",
						"SymAdaptNDArray"
					],
					[
						"mov",
						"movedasu"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/home/sheffler/.config/kitty/kitty.conf",
					"settings":
					{
						"buffer_size": 91391,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					},
					"undo_stack":
					[
						[
							13,
							1,
							"right_delete",
							null,
							"AQAAAM8AAAAAAAAAzwAAAAAAAAABAAAAIw",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzwAAAAAAAADPAAAAAAAAAAAAAAAAAAAA"
						],
						[
							15,
							1,
							"right_delete",
							null,
							"AQAAAM8AAAAAAAAAzwAAAAAAAAABAAAAIA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzwAAAAAAAADPAAAAAAAAAAAAAAAAAPC/"
						],
						[
							18,
							1,
							"left_delete",
							null,
							"AQAAAOgAAAAAAAAA6AAAAAAAAAABAAAAZQ",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6QAAAAAAAADpAAAAAAAAAAAAAAAAAPC/"
						],
						[
							20,
							1,
							"left_delete",
							null,
							"AQAAAOcAAAAAAAAA5wAAAAAAAAABAAAAYw",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6AAAAAAAAADoAAAAAAAAAAAAAAAAAPC/"
						],
						[
							22,
							1,
							"left_delete",
							null,
							"AQAAAOYAAAAAAAAA5gAAAAAAAAABAAAAYQ",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5wAAAAAAAADnAAAAAAAAAAAAAAAAAPC/"
						],
						[
							24,
							1,
							"left_delete",
							null,
							"AQAAAOUAAAAAAAAA5QAAAAAAAAABAAAAcA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5gAAAAAAAADmAAAAAAAAAAAAAAAAAPC/"
						],
						[
							26,
							1,
							"left_delete",
							null,
							"AQAAAOQAAAAAAAAA5AAAAAAAAAABAAAAcw",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAAPC/"
						],
						[
							28,
							1,
							"left_delete",
							null,
							"AQAAAOMAAAAAAAAA4wAAAAAAAAABAAAAbw",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
						],
						[
							30,
							1,
							"left_delete",
							null,
							"AQAAAOIAAAAAAAAA4gAAAAAAAAABAAAAbg",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4wAAAAAAAADjAAAAAAAAAAAAAAAAAPC/"
						],
						[
							32,
							1,
							"left_delete",
							null,
							"AQAAAOEAAAAAAAAA4QAAAAAAAAABAAAAbw",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4gAAAAAAAADiAAAAAAAAAAAAAAAAAPC/"
						],
						[
							34,
							1,
							"left_delete",
							null,
							"AQAAAOAAAAAAAAAA4AAAAAAAAAABAAAAbQ",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4QAAAAAAAADhAAAAAAAAAAAAAAAAAPC/"
						],
						[
							36,
							1,
							"insert",
							{
								"characters": "S"
							},
							"AQAAAOAAAAAAAAAA4QAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAAAPC/"
						],
						[
							38,
							1,
							"insert",
							{
								"characters": "o"
							},
							"AQAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4QAAAAAAAADhAAAAAAAAAAAAAAAAAPC/"
						],
						[
							40,
							1,
							"insert",
							{
								"characters": "u"
							},
							"AQAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4gAAAAAAAADiAAAAAAAAAAAAAAAAAPC/"
						],
						[
							42,
							1,
							"insert",
							{
								"characters": "r"
							},
							"AQAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4wAAAAAAAADjAAAAAAAAAAAAAAAAAPC/"
						],
						[
							44,
							1,
							"insert",
							{
								"characters": "c"
							},
							"AQAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
						],
						[
							46,
							1,
							"insert",
							{
								"characters": "e"
							},
							"AQAAAOUAAAAAAAAA5gAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAAPC/"
						],
						[
							48,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5gAAAAAAAADmAAAAAAAAAAAAAAAAAPC/"
						],
						[
							50,
							1,
							"insert",
							{
								"characters": "C"
							},
							"AQAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5wAAAAAAAADnAAAAAAAAAAAAAAAAAPC/"
						],
						[
							52,
							1,
							"insert",
							{
								"characters": "o"
							},
							"AQAAAOgAAAAAAAAA6QAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6AAAAAAAAADoAAAAAAAAAAAAAAAAAPC/"
						],
						[
							54,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6QAAAAAAAADpAAAAAAAAAAAAAAAAAPC/"
						],
						[
							56,
							1,
							"insert",
							{
								"characters": "e"
							},
							"AQAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6gAAAAAAAADqAAAAAAAAAAAAAAAAAPC/"
						],
						[
							58,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6wAAAAAAAADrAAAAAAAAAAAAAAAAAPC/"
						],
						[
							60,
							1,
							"insert",
							{
								"characters": "P"
							},
							"AQAAAOwAAAAAAAAA7QAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AAAAAAAAADsAAAAAAAAAAAAAAAAAPC/"
						],
						[
							62,
							1,
							"insert",
							{
								"characters": "r"
							},
							"AQAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7QAAAAAAAADtAAAAAAAAAAAAAAAAAPC/"
						],
						[
							64,
							1,
							"insert",
							{
								"characters": "o"
							},
							"AQAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA",
							"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7gAAAAAAAADuAAAAAAAAAAAAAAAAAPC/"
						]
					]
				},
				{
					"file": "/home/sheffler/.config/sublime-text-3/Packages/User/Celeste Dark.sublime-color-scheme",
					"settings":
					{
						"buffer_size": 5693,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					},
					"undo_stack":
					[
						[
							10,
							1,
							"left_delete",
							null,
							"AQAAAIEDAAAAAAAAgQMAAAAAAAABAAAAMg",
							"AQAAAAAAAAABAAAAggMAAAAAAACCAwAAAAAAAAAAAAAAAPC/"
						],
						[
							12,
							1,
							"left_delete",
							null,
							"AQAAAIADAAAAAAAAgAMAAAAAAAABAAAAMg",
							"AQAAAAAAAAABAAAAgQMAAAAAAACBAwAAAAAAAAAAAAAAAPC/"
						],
						[
							14,
							1,
							"left_delete",
							null,
							"AQAAAH8DAAAAAAAAfwMAAAAAAAABAAAAMg",
							"AQAAAAAAAAABAAAAgAMAAAAAAACAAwAAAAAAAAAAAAAAAPC/"
						],
						[
							16,
							1,
							"insert",
							{
								"characters": "0"
							},
							"AQAAAH8DAAAAAAAAgAMAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAfwMAAAAAAAB/AwAAAAAAAAAAAAAAAPC/"
						],
						[
							18,
							1,
							"insert",
							{
								"characters": "0"
							},
							"AQAAAIADAAAAAAAAgQMAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAgAMAAAAAAACAAwAAAAAAAAAAAAAAAPC/"
						],
						[
							20,
							1,
							"insert",
							{
								"characters": "0"
							},
							"AQAAAIEDAAAAAAAAggMAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAgQMAAAAAAACBAwAAAAAAAAAAAAAAAPC/"
						],
						[
							24,
							1,
							"right_delete",
							null,
							"AQAAAGYDAAAAAAAAZgMAAAAAAAABAAAAMw",
							"AQAAAAAAAAABAAAAZgMAAAAAAABmAwAAAAAAAAAAAAAAAPC/"
						],
						[
							26,
							1,
							"right_delete",
							null,
							"AQAAAGYDAAAAAAAAZgMAAAAAAAABAAAAMw",
							"AQAAAAAAAAABAAAAZgMAAAAAAABmAwAAAAAAAAAAAAAAAPC/"
						],
						[
							28,
							1,
							"right_delete",
							null,
							"AQAAAGYDAAAAAAAAZgMAAAAAAAABAAAAMw",
							"AQAAAAAAAAABAAAAZgMAAAAAAABmAwAAAAAAAAAAAAAAAPC/"
						],
						[
							30,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAAGYDAAAAAAAAZwMAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAZgMAAAAAAABmAwAAAAAAAAAAAAAAAPC/"
						],
						[
							32,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAAGcDAAAAAAAAaAMAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAZwMAAAAAAABnAwAAAAAAAAAAAAAAAPC/"
						],
						[
							34,
							1,
							"insert",
							{
								"characters": "2"
							},
							"AQAAAGgDAAAAAAAAaQMAAAAAAAAAAAAA",
							"AQAAAAAAAAABAAAAaAMAAAAAAABoAwAAAAAAAAAAAAAAAPC/"
						],
						[
							38,
							1,
							"jsoncomma_fix",
							{
								"ranges":
								[
									[
										0,
										5700
									]
								]
							},
							"AQAAAAAAAAAAAAAAPRYAAAAAAABEFgAAewogICAgLy8gUm91Z2ggbW9kaWZpZWQgdmVyc2lvbiBvZiBDZWxlc3RlIHRvIGRhcmtlbiBpdCB1cAogICAgIm5hbWUiOiAiQ2VsZXN0ZSBEYXJrIiwKICAgICJhdXRob3IiOiAiU3VibGltZSBIUSBQdHkgTHRkIiwKICAgICJ2YXJpYWJsZXMiOgogICAgewogICAgICAgIC8vIFRoZXNlIGNvbG9ycyBhcmUgcGFydCBvZiB0aGUgaGFzaGVkIHJhbmdlCiAgICAgICAgLy8gYW5kIHNob3VsZCBvbmx5IGJlIHVzZWQgaW4gbm9uLXNvdXJjZQogICAgICAgICJwdXJwbGUiOiAiaHNsYSgyNjAsIDUwJSwgNzAlLCAxKSIsCiAgICAgICAgImJsdWUiOiAiaHNsYSgyMDAsIDcwJSwgNTUlLCAxKSIsCiAgICAgICAgInRlYWwiOiAiaHNsYSgxNzAsIDcwJSwgNTUlLCAxKSIsCiAgICAgICAgImdyZWVuIjogImhzbGEoMTMwLCA3MCUsIDU1JSwgMSkiLAogICAgICAgIC8vIEVuZCBvZiBoYXNoZWQgcmFuZ2UgY29sb3JzCiAgICAgICAgInJlZCI6ICJoc2xhKDAsIDcwJSwgODUlLCAxKSIsCiAgICAgICAgIm9yYW5nZSI6ICJoc2xhKDI1LCA5MCUsIDcwJSwgMSkiLAogICAgICAgICJkYXJrX29yYW5nZSI6ICJoc2xhKDEwLCA5MCUsIDcwJSwgMSkiLAogICAgICAgICJ5ZWxsb3ciOiAiaHNsYSg1MCwgMTAwJSwgNzAlLCAxKSIsCiAgICAgICAgImJyb3duIjogImhzbGEoMzAsIDMwJSwgNzUlLCAxKSIsCiAgICAgICAgImxpZ2h0X2Jyb3duIjogImhzbGEoMzAsIDMwJSwgODUlLCAxKSIsCiAgICAgICAgImRhcmtfYnJvd24iOiAiaHNsYSgzMCwgMzAlLCAzMCUsIDEpIiwKICAgICAgICAibWFnZW50YSI6ICJoc2xhKDMzNSwgMTAwJSwgNzUlLCAxKSIsCiAgICAgICAgImxpZ2h0X2dyYXkiOiAiI2Y2ZjZmNiIsCiAgICAgICAgImRhcmtfZ3JheSI6ICIjMjIyIiwKICAgICAgICAiYmxhY2siOiAiIzAwMCIsCiAgICAgICAgIndoaXRlc21va2UiOiAicmdiKDI1MywgMjUzLCAyNTMpIgogICAgfSwKICAgICJnbG9iYWxzIjoKICAgIHsKICAgICAgICAiZm9yZWdyb3VuZCI6ICJ2YXIod2hpdGVzbW9rZSkiLAogICAgICAgICJiYWNrZ3JvdW5kIjogInZhcihibGFjaykiLAogICAgICAgICJjYXJldCI6ICJ2YXIobWFnZW50YSkiLAogICAgICAgICJzZWxlY3Rpb24iOiAiY29sb3IodmFyKGxpZ2h0X2dyYXkpIGEoMC4wOCkpIiwKICAgICAgICAic2VsZWN0aW9uX2JvcmRlciI6ICJjb2xvcih2YXIobGlnaHRfZ3JheSkgYSgwLjMpKSIsCiAgICAgICAgImluYWN0aXZlX3NlbGVjdGlvbiI6ICJjb2xvcih2YXIobGlnaHRfZ3JheSkgYSgwLjA2KSkiLAogICAgICAgICJsaW5lX2hpZ2hsaWdodCI6ICIjMzMzIiwKICAgICAgICAiaGlnaGxpZ2h0IjogInZhcihtYWdlbnRhKSIsCiAgICAgICAgImZpbmRfaGlnaGxpZ2h0IjogInZhcih5ZWxsb3cpIiwKICAgICAgICAiZmluZF9oaWdobGlnaHRfZm9yZWdyb3VuZCI6ICJ2YXIoZGFya19icm93bikiLAogICAgICAgICJhY3RpdmVfZ3VpZGUiOiAidmFyKHJlZCkiLAogICAgICAgICJzdGFja19ndWlkZSI6ICJ2YXIob3JhbmdlKSIsCiAgICAgICAgInNoYWRvdyI6ICIjYmJiIiwKICAgICAgICAiYWNjZW50IjogInZhcihvcmFuZ2UpIiwKICAgICAgICAibWlzc3BlbGxpbmciOiAidmFyKGRhcmtfb3JhbmdlKSIsCiAgICAgICAgImZvbGRfbWFya2VyIjogInZhcih5ZWxsb3cpIiwKICAgIH0sCiAgICAicnVsZXMiOgogICAgWwogICAgICAgIHsKICAgICAgICAgICAgInNjb3BlIjogInRleHQiLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjY2NjIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAic2NvcGUiOiAic291cmNlIC0gY29tbWVudCAtIHN0cmluZyAtIGtleXdvcmQgLSBwdW5jdHVhdGlvbiAtIHN0b3JhZ2UgLSBlbnRpdHkgLSBzb3VyY2UuY3NzIiwKICAgICAgICAgICAgImZvcmVncm91bmQiOiBbInZhcihncmVlbikiLCAidmFyKHB1cnBsZSkiXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAic2NvcGUiOiAiY29tbWVudCIsCiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogIiM5OTkiLAogICAgICAgICAgICAiZm9udF9zdHlsZSI6ICJpdGFsaWMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJzY29wZSI6ICJlbnRpdHkubmFtZSAtIGVudGl0eS5uYW1lLnRhZyAtIGVudGl0eS5uYW1lLnNlY3Rpb24iLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICJ2YXIob3JhbmdlKSIsCiAgICAgICAgICAgICJiYWNrZ3JvdW5kIjogIiMxZTFlMWUiLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAic2NvcGUiOiAiZW50aXR5Lm90aGVyLmluaGVyaXRlZC1jbGFzcyIsCiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogInZhcihkYXJrX29yYW5nZSkiLAogICAgICAgICAgICAiYmFja2dyb3VuZCI6ICIjMWUxZTFlIiwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgInNjb3BlIjogInN1cHBvcnQuZnVuY3Rpb24uYnVpbHRpbiwgc3VwcG9ydC5jbGFzcy5idWlsdGluLCB2YXJpYWJsZS5sYW5ndWFnZSIsCiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogInZhcih3aGl0ZXNtb2tlKSIsCiAgICAgICAgICAgICJmb250X3N0eWxlIjogIml0YWxpYyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgInNjb3BlIjogImtleXdvcmQub3BlcmF0b3IiLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzc3IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAic2NvcGUiOiAia2V5d29yZCwgY29uc3RhbnQubGFuZ3VhZ2UiLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICJ2YXIod2hpdGVzbW9rZSkiLAogICAgICAgICAgICAiZm9udF9zdHlsZSI6ICJpdGFsaWMiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJzY29wZSI6ICJjb25zdGFudC5udW1lcmljIiwKICAgICAgICAgICAgImZvcmVncm91bmQiOiAidmFyKHJlZCkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJzY29wZSI6ICJjb25zdGFudC5jaGFyYWN0ZXIiLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICJ2YXIoZGFya19vcmFuZ2UpIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAic2NvcGUiOiAic3RvcmFnZSwgc3VwcG9ydC50eXBlLnN5cy10eXBlcyIsCiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogInZhcih3aGl0ZXNtb2tlKSIsCiAgICAgICAgICAgICJmb250X3N0eWxlIjogIml0YWxpYyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgInNjb3BlIjogInN0cmluZyIsCiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogInZhcihicm93bikiLAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAic2NvcGUiOiAicHVuY3R1YXRpb24uZGVmaW5pdGlvbi5zdHJpbmciLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICJ2YXIobGlnaHRfYnJvd24pIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAic2NvcGUiOiAicHVuY3R1YXRpb24iLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICIjNzc3IgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAic2NvcGUiOiAibWV0YS5mdW5jdGlvbi1jYWxsIHZhcmlhYmxlLnBhcmFtZXRlciIsCiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogInZhcihsaWdodF9icm93bikiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJzY29wZSI6ICJpbnZhbGlkLmlsbGVnYWwiLAogICAgICAgICAgICAiYmFja2dyb3VuZCI6ICJ2YXIocmVkKSIsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJzY29wZSI6ICJpbnZhbGlkLmRlcHJlY2F0ZWQiLAogICAgICAgICAgICAiYmFja2dyb3VuZCI6ICJ2YXIocmVkKSIsCiAgICAgICAgfSwKICAgICAgICAvLyBIVE1MCiAgICAgICAgewogICAgICAgICAgICAic2NvcGUiOiAiZW50aXR5Lm5hbWUudGFnIiwKICAgICAgICAgICAgImZvcmVncm91bmQiOiAidmFyKGJsdWUpIgogICAgICAgIH0sCiAgICAgICAgLy8gSFRNTC9DU1MKICAgICAgICB7CiAgICAgICAgICAgICJzY29wZSI6ICJlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUiLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICJ2YXIodGVhbCkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJzY29wZSI6ICJlbnRpdHkub3RoZXIuYXR0cmlidXRlLW5hbWUuaWQiLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICJ2YXIob3JhbmdlKSIKICAgICAgICB9LAogICAgICAgIC8vIENTUwogICAgICAgIHsKICAgICAgICAgICAgInNjb3BlIjogInN1cHBvcnQudHlwZS5wcm9wZXJ0eS1uYW1lIiwKICAgICAgICAgICAgImZvcmVncm91bmQiOiAidmFyKHB1cnBsZSkiCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgICJzY29wZSI6ICJzdXBwb3J0LnR5cGUudmVuZG9yLXByZWZpeCIsCiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogInZhcihibHVlKSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgInNjb3BlIjogImVudGl0eS5vdGhlci5wc2V1ZG8tY2xhc3MiLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICJ2YXIoZ3JlZW4pIgogICAgICAgIH0sCiAgICAgICAgLy8gTWFya2Rvd24KICAgICAgICB7CiAgICAgICAgICAgICJzY29wZSI6ICJtYXJrdXAuaGVhZGluZy4xIGVudGl0eS5uYW1lLnNlY3Rpb24iLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICJ2YXIoYmx1ZSkiLAogICAgICAgICAgICAiZm9udF9zdHlsZSI6ICJib2xkIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAic2NvcGUiOiAibWFya3VwLmhlYWRpbmcuMiBlbnRpdHkubmFtZS5zZWN0aW9uIiwKICAgICAgICAgICAgImZvcmVncm91bmQiOiAidmFyKGJsdWUpIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAic2NvcGUiOiAiZW50aXR5Lm5hbWUuc2VjdGlvbiIsCiAgICAgICAgICAgICJmb3JlZ3JvdW5kIjogInZhcih0ZWFsKSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgInNjb3BlIjogIm1hcmt1cC5pdGFsaWMiLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICJ2YXIoYmxhY2spIiwKICAgICAgICAgICAgImZvbnRfc3R5bGUiOiAiaXRhbGljIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAic2NvcGUiOiAibWFya3VwLmJvbGQiLAogICAgICAgICAgICAiZm9yZWdyb3VuZCI6ICJ2YXIoYmxhY2spIiwKICAgICAgICAgICAgImZvbnRfc3R5bGUiOiAiYm9sZCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgInNjb3BlIjogIm1hcmt1cC5saXN0IHB1bmN0dWF0aW9uLmRlZmluaXRpb24ubGlzdF9pdGVtIiwKICAgICAgICAgICAgImZvcmVncm91bmQiOiAidmFyKGRhcmtfb3JhbmdlKSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgInNjb3BlIjogIm1hcmt1cC5yYXciLAogICAgICAgICAgICAiYmFja2dyb3VuZCI6ICIjMjAyMDIwIgogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgICAic2NvcGUiOiAibWFya3VwLnJhdyBjb25zdGFudC5vdGhlci5sYW5ndWFnZS1uYW1lIiwKICAgICAgICAgICAgImZvcmVncm91bmQiOiAidmFyKGdyZWVuKSIsCiAgICAgICAgICAgICJmb250X3N0eWxlIjogIml0YWxpYyIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgInNjb3BlIjogIm1ldGEudGFibGUuaGVhZGVyIC0gcHVuY3R1YXRpb24iLAogICAgICAgICAgICAiZm9udF9zdHlsZSI6ICJib2xkIgogICAgICAgIH0sCiAgICBdCn0K",
							"AQAAAAAAAAABAAAAaQMAAAAAAABpAwAAAAAAAAAAAAAAAPC/"
						]
					]
				},
				{
					"contents": "Package Control Messages\n========================\n\n\nSublimeLinter-mypy\n------------------\n\n  SublimeLinter-mypy\n  ------------------\n  This linter plugin for SublimeLinter provides an interface to mypy.\n  \n  ** IMPORTANT! **\n  \n  Before this plugin will activate, you *must*\n  follow the installation instructions here:\n  \n  https://github.com/SublimeLinter/SublimeLinter-mypy\n\n\nSublimeLinter\n-------------\n\n  \n    ____        _     _ _                _     _       _\n   / ___| _   _| |__ | (_)_ __ ___   ___| |   (_)_ __ | |_ ___ _ __\n   \\___ \\| | | | '_ \\| | | '_ ` _ \\ / _ \\ |   | | '_ \\| __/ _ \\ '__|\n    ___) | |_| | |_) | | | | | | | |  __/ |___| | | | | ||  __/ |\n   |____/ \\__,_|_.__/|_|_|_| |_| |_|\\___|_____|_|_| |_|\\__\\___|_|\n  \n  \n  *** As of April 2024, the current stable version of Sublime Text, Build 4169,\n  has a bug and cannot install SublimeLinter without a restart.  You're fine\n  if you have a later dev build, e.g. build 4173 has a better experience. ***\n  \n  \n  Welcome to SublimeLinter, a linter framework for Sublime Text.\n  \n  Linters are not included, they must be installed separately.\n  Get them from Package Control: https://packagecontrol.io/search/SublimeLinter\n  \n  *** We're in a transition phase to the newer ST4 plugin host.  Unless we have\n  more experience for the process, it _may_ be necessary to restart Sublime Text\n  after installing or upgrading helper packages.  Just check if everything works\n  or if the console shows permanent errors.  On my machine, no restarts were\n  necessary. ***\n  \n  \n  For complete documentation on how to use and configure SublimeLinter,\n  please see: http://www.sublimelinter.com\n  \n  To report issues: https://github.com/SublimeLinter/SublimeLinter\n\n\nSublimeLinter-mypy\n------------------\n\n  SublimeLinter-mypy\n  ------------------\n  This linter plugin for SublimeLinter provides an interface to mypy.\n  \n  ** IMPORTANT! **\n  \n  Before this plugin will activate, you *must*\n  follow the installation instructions here:\n  \n  https://github.com/SublimeLinter/SublimeLinter-mypy\n",
					"settings":
					{
						"buffer_size": 2052,
						"line_ending": "Unix",
						"name": "Package Control Messages",
						"read_only": true,
						"scratch": true
					},
					"undo_stack":
					[
						[
							1,
							1,
							"package_control_message",
							{
								"message": "\n\nSublimeLinter-mypy\n------------------\n\n  SublimeLinter-mypy\n  ------------------\n  This linter plugin for SublimeLinter provides an interface to mypy.\n  \n  ** IMPORTANT! **\n  \n  Before this plugin will activate, you *must*\n  follow the installation instructions here:\n  \n  https://github.com/SublimeLinter/SublimeLinter-mypy\n"
							},
							"AQAAAAAAAAAAAAAAeQEAAAAAAAAAAAAA",
							"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
						],
						[
							2,
							1,
							"package_control_message",
							{
								"message": "\n\nSublimeLinter\n-------------\n\n  \n    ____        _     _ _                _     _       _\n   / ___| _   _| |__ | (_)_ __ ___   ___| |   (_)_ __ | |_ ___ _ __\n   \\___ \\| | | | '_ \\| | | '_ ` _ \\ / _ \\ |   | | '_ \\| __/ _ \\ '__|\n    ___) | |_| | |_) | | | | | | | |  __/ |___| | | | | ||  __/ |\n   |____/ \\__,_|_.__/|_|_|_| |_| |_|\\___|_____|_|_| |_|\\__\\___|_|\n  \n  \n  *** As of April 2024, the current stable version of Sublime Text, Build 4169,\n  has a bug and cannot install SublimeLinter without a restart.  You're fine\n  if you have a later dev build, e.g. build 4173 has a better experience. ***\n  \n  \n  Welcome to SublimeLinter, a linter framework for Sublime Text.\n  \n  Linters are not included, they must be installed separately.\n  Get them from Package Control: https://packagecontrol.io/search/SublimeLinter\n  \n  *** We're in a transition phase to the newer ST4 plugin host.  Unless we have\n  more experience for the process, it _may_ be necessary to restart Sublime Text\n  after installing or upgrading helper packages.  Just check if everything works\n  or if the console shows permanent errors.  On my machine, no restarts were\n  necessary. ***\n  \n  \n  For complete documentation on how to use and configure SublimeLinter,\n  please see: http://www.sublimelinter.com\n  \n  To report issues: https://github.com/SublimeLinter/SublimeLinter\n"
							},
							"AQAAAHkBAAAAAAAAvQYAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AQAAAAAAAEMBAAAAAAAAAAAAAAAA8L8"
						],
						[
							4,
							1,
							"package_control_message",
							{
								"message": "\n\nSublimeLinter-mypy\n------------------\n\n  SublimeLinter-mypy\n  ------------------\n  This linter plugin for SublimeLinter provides an interface to mypy.\n  \n  ** IMPORTANT! **\n  \n  Before this plugin will activate, you *must*\n  follow the installation instructions here:\n  \n  https://github.com/SublimeLinter/SublimeLinter-mypy\n"
							},
							"AQAAAL0GAAAAAAAABAgAAAAAAAAAAAAA",
							"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AQAAAAAAAEMBAAAAAAAAAAAAAAAA8L8"
						]
					]
				},
				{
					"file": "/home/sheffler/.config/fish/config.fish",
					"settings":
					{
						"buffer_size": 612,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					},
					"undo_stack":
					[
						[
							11,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAJIAAAAAAAAAkwAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAAAAAAAAAJIAAAAAAAAAAAAAAAAA8L8"
						],
						[
							13,
							1,
							"left_delete",
							null,
							"AQAAAJIAAAAAAAAAkgAAAAAAAAABAAAAIA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTAAAAAAAAAJMAAAAAAAAAAAAAAAAA8L8"
						],
						[
							23,
							1,
							"insert",
							{
								"characters": "g"
							},
							"BwAAAMgBAAAAAAAAyQEAAAAAAAAAAAAAbQEAAAAAAABuAQAAAAAAAAAAAAASAQAAAAAAABMBAAAAAAAAAAAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA3gAAAAAAAADfAAAAAAAAAAAAAAC1AAAAAAAAALYAAAAAAAAAAAAAAJIAAAAAAAAAkwAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAcAAACSAAAAAAAAAJIAAAAAAAAAAAAAAAAA8L+1AAAAAAAAALUAAAAAAAAAAAAAAAAA8L/eAAAAAAAAAN4AAAAAAAAAAAAAAAAA8L/3AAAAAAAAAPcAAAAAAAAAAAAAAAAA8L8SAQAAAAAAABIBAAAAAAAAAAAAAAAA8L9tAQAAAAAAAG0BAAAAAAAAAAAAAAAA8L/IAQAAAAAAAMgBAAAAAAAAAAAAAAAA8L8"
						],
						[
							27,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AQAAAIwAAAAAAAAAjQAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMAAAAAAAAAIwAAAAAAAAAAAAAAAAAVUA"
						],
						[
							30,
							1,
							"insert",
							{
								"characters": "\n"
							},
							"AQAAAIwAAAAAAAAAjQAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMAAAAAAAAAIwAAAAAAAAAAAAAAAAAAAA"
						],
						[
							32,
							1,
							"insert",
							{
								"characters": "e"
							},
							"AQAAAI0AAAAAAAAAjgAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAAAAAAAAAI0AAAAAAAAAAAAAAAAA8L8"
						],
						[
							34,
							1,
							"left_delete",
							null,
							"AQAAAI0AAAAAAAAAjQAAAAAAAAABAAAAZQ",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAAAAAAAAAI4AAAAAAAAAAAAAAAAA8L8"
						],
						[
							36,
							1,
							"insert",
							{
								"characters": "s"
							},
							"AQAAAI0AAAAAAAAAjgAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAAAAAAAAAI0AAAAAAAAAAAAAAAAA8L8"
						],
						[
							38,
							1,
							"insert",
							{
								"characters": "e"
							},
							"AQAAAI4AAAAAAAAAjwAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAAAAAAAAAI4AAAAAAAAAAAAAAAAA8L8"
						],
						[
							40,
							1,
							"insert",
							{
								"characters": "t"
							},
							"AQAAAI8AAAAAAAAAkAAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPAAAAAAAAAI8AAAAAAAAAAAAAAAAA8L8"
						],
						[
							42,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAJAAAAAAAAAAkQAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQAAAAAAAAAJAAAAAAAAAAAAAAAAAA8L8"
						],
						[
							44,
							1,
							"insert",
							{
								"characters": "-"
							},
							"AQAAAJEAAAAAAAAAkgAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRAAAAAAAAAJEAAAAAAAAAAAAAAAAA8L8"
						],
						[
							46,
							1,
							"insert",
							{
								"characters": "g"
							},
							"AQAAAJIAAAAAAAAAkwAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAAAAAAAAAJIAAAAAAAAAAAAAAAAA8L8"
						],
						[
							48,
							1,
							"insert",
							{
								"characters": "c"
							},
							"AQAAAJMAAAAAAAAAlAAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTAAAAAAAAAJMAAAAAAAAAAAAAAAAA8L8"
						],
						[
							50,
							1,
							"left_delete",
							null,
							"AQAAAJMAAAAAAAAAkwAAAAAAAAABAAAAYw",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAAAAAAAAAJQAAAAAAAAAAAAAAAAA8L8"
						],
						[
							52,
							1,
							"insert",
							{
								"characters": "x"
							},
							"AQAAAJMAAAAAAAAAlAAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTAAAAAAAAAJMAAAAAAAAAAAAAAAAA8L8"
						],
						[
							54,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAJQAAAAAAAAAlQAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAAAAAAAAAJQAAAAAAAAAAAAAAAAA8L8"
						],
						[
							56,
							1,
							"insert",
							{
								"characters": "E"
							},
							"AQAAAJUAAAAAAAAAlgAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVAAAAAAAAAJUAAAAAAAAAAAAAAAAA8L8"
						],
						[
							58,
							1,
							"insert",
							{
								"characters": "D"
							},
							"AQAAAJYAAAAAAAAAlwAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWAAAAAAAAAJYAAAAAAAAAAAAAAAAA8L8"
						],
						[
							60,
							1,
							"insert",
							{
								"characters": "I"
							},
							"AQAAAJcAAAAAAAAAmAAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXAAAAAAAAAJcAAAAAAAAAAAAAAAAA8L8"
						],
						[
							62,
							1,
							"insert",
							{
								"characters": "T"
							},
							"AQAAAJgAAAAAAAAAmQAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYAAAAAAAAAJgAAAAAAAAAAAAAAAAA8L8"
						],
						[
							64,
							1,
							"insert",
							{
								"characters": "O"
							},
							"AQAAAJkAAAAAAAAAmgAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZAAAAAAAAAJkAAAAAAAAAAAAAAAAA8L8"
						],
						[
							66,
							1,
							"insert",
							{
								"characters": "R"
							},
							"AQAAAJoAAAAAAAAAmwAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaAAAAAAAAAJoAAAAAAAAAAAAAAAAA8L8"
						],
						[
							68,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAJsAAAAAAAAAnAAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAAAAAAAAAJsAAAAAAAAAAAAAAAAA8L8"
						],
						[
							70,
							1,
							"insert_snippet",
							{
								"contents": "'$0'"
							},
							"AQAAAJwAAAAAAAAAngAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcAAAAAAAAAJwAAAAAAAAAAAAAAAAA8L8"
						],
						[
							72,
							1,
							"insert",
							{
								"characters": "w"
							},
							"AQAAAJ0AAAAAAAAAngAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAAAAAAAAAJ0AAAAAAAAAAAAAAAAA8L8"
						],
						[
							74,
							1,
							"left_delete",
							null,
							"AQAAAJ0AAAAAAAAAnQAAAAAAAAABAAAAdw",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeAAAAAAAAAJ4AAAAAAAAAAAAAAAAA8L8"
						],
						[
							76,
							1,
							"insert",
							{
								"characters": "s"
							},
							"AQAAAJ0AAAAAAAAAngAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAAAAAAAAAJ0AAAAAAAAAAAAAAAAA8L8"
						],
						[
							78,
							1,
							"insert",
							{
								"characters": "u"
							},
							"AQAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeAAAAAAAAAJ4AAAAAAAAAAAAAAAAA8L8"
						],
						[
							80,
							1,
							"insert",
							{
								"characters": "b"
							},
							"AQAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfAAAAAAAAAJ8AAAAAAAAAAAAAAAAA8L8"
						],
						[
							82,
							1,
							"insert",
							{
								"characters": "l"
							},
							"AQAAAKAAAAAAAAAAoQAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAAA8L8"
						],
						[
							84,
							1,
							"insert",
							{
								"characters": " "
							},
							"AQAAAKEAAAAAAAAAogAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChAAAAAAAAAKEAAAAAAAAAAAAAAAAA8L8"
						],
						[
							86,
							1,
							"insert",
							{
								"characters": "-"
							},
							"AQAAAKIAAAAAAAAAowAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACiAAAAAAAAAKIAAAAAAAAAAAAAAAAA8L8"
						],
						[
							88,
							1,
							"insert",
							{
								"characters": "w"
							},
							"AQAAAKMAAAAAAAAApAAAAAAAAAAAAAAA",
							"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjAAAAAAAAAKMAAAAAAAAAAAAAAAAA8L8"
						]
					]
				},
				{
					"contents": "# Enable this if the input graph has weights. Disable this if you want to use synthetically generated weights.\nifdef WEIGHTED\nEDGEDATA = -DEDGEDATA\nendif\n\n# Enable this if number of vertices > 2^32 \nifdef LONGVERTEXCOUNT\nINTV = -DLONG\nendif\n\nINTE = -DEDGELONG\n\n#compilers\n$(info ************  Using CILK ************)\nPCC = g++-7\nPCFLAGS = -std=c++14 -fcilkplus -lcilkrts -g -O3 -DCILK $(INTV) $(INTE) $(EDGEDATA)\nLDFLAGS = -L../lib/mimalloc/out/release -lmimalloc \n\n# dependencies\nCOMMON=../core/common/binary_search.h ../core/common/bitsetscheduler.h ../core/common/blockRadixSort.h ../core/common/densebitset.h ../core/common/gettime.h ../core/common/index_map.h ../core/common/matrix.h ../core/common/maybe.h ../core/common/parallel.h ../core/common/parseCommandLine.h ../core/common/transpose.h ../core/common/quickSort.h ../core/common/rwlock.h ../core/common/sequence.h ../core/common/utils.h\n\nGRAPH= ../core/graph/graph.h ../core/graph/graphUtils.h ../core/graph/IO.h ../core/graph/vertex.h ../core/graph/vertexSubset.h\n\nGRAPHBOLT=../core/graphBolt/AdaptiveExecutor.h ../core/graphBolt/GraphBoltEngine_complex.h ../core/graphBolt/GraphBoltEngine.h ../core/graphBolt/GraphBoltEngine_simple.h ../core/graphBolt/ingestor.h ../core/graphBolt/KickStarterEngine.h\n\nOTHERS=../core/main.h\n\nALL=PageRank LabelPropagation CF COEM SSSP BFS\n\n# make\n\nall: $(ALL)\n\n% : %.C $(COMMON) $(GRAPH) $(GRAPHBOLT) $(OTHERS)\n\t$(PCC) $(PCFLAGS) $< $(LDFLAGS) -o $@\n\n.PHONY : clean\n\nclean :\n\trm -f *.o *.obj $(ALL)\n\n",
					"file": "/home/sheffler/software/graphbolt/apps/Makefile",
					"file_size": 1496,
					"file_write_time": 133655660450140559,
					"settings":
					{
						"buffer_size": 1498,
						"line_ending": "Unix"
					},
					"undo_stack":
					[
						[
							5,
							1,
							"right_delete",
							null,
							"AQAAAEQBAAAAAAAARAEAAAAAAAABAAAAYw",
							"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAQAAAAAAAEQBAAAAAAAAAAAAAAAA8L8"
						],
						[
							7,
							1,
							"right_delete",
							null,
							"AQAAAEQBAAAAAAAARAEAAAAAAAABAAAAbA",
							"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAQAAAAAAAEQBAAAAAAAAAAAAAAAA8L8"
						],
						[
							9,
							1,
							"right_delete",
							null,
							"AQAAAEQBAAAAAAAARAEAAAAAAAABAAAAYQ",
							"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAQAAAAAAAEQBAAAAAAAAAAAAAAAA8L8"
						],
						[
							11,
							1,
							"right_delete",
							null,
							"AQAAAEQBAAAAAAAARAEAAAAAAAABAAAAbg",
							"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAQAAAAAAAEQBAAAAAAAAAAAAAAAA8L8"
						],
						[
							13,
							1,
							"right_delete",
							null,
							"AQAAAEQBAAAAAAAARAEAAAAAAAABAAAAZw",
							"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAQAAAAAAAEQBAAAAAAAAAAAAAAAA8L8"
						],
						[
							15,
							1,
							"insert",
							{
								"characters": "g"
							},
							"AQAAAEQBAAAAAAAARQEAAAAAAAAAAAAA",
							"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEAQAAAAAAAEQBAAAAAAAAAAAAAAAA8L8"
						],
						[
							26,
							1,
							"insert",
							{
								"characters": "-"
							},
							"AQAAAEcBAAAAAAAASAEAAAAAAAAAAAAA",
							"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHAQAAAAAAAEcBAAAAAAAAAAAAAAAA8L8"
						],
						[
							28,
							1,
							"insert",
							{
								"characters": "7"
							},
							"AQAAAEgBAAAAAAAASQEAAAAAAAAAAAAA",
							"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIAQAAAAAAAEgBAAAAAAAAAAAAAAAA8L8"
						],
						[
							9,
							1,
							"insert",
							{
								"characters": "a"
							},
							"AQAAAEkBAAAAAAAASgEAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEkBAAAAAAAASQEAAAAAAAAAAAAAAADwvw"
						],
						[
							11,
							1,
							"insert",
							{
								"characters": "s"
							},
							"AQAAAEoBAAAAAAAASwEAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoBAAAAAAAASgEAAAAAAAAAAAAAAADwvw"
						],
						[
							13,
							1,
							"insert",
							{
								"characters": "d"
							},
							"AQAAAEsBAAAAAAAATAEAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsBAAAAAAAASwEAAAAAAAAAAAAAAADwvw"
						],
						[
							15,
							1,
							"insert",
							{
								"characters": "f"
							},
							"AQAAAEwBAAAAAAAATQEAAAAAAAAAAAAA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwBAAAAAAAATAEAAAAAAAAAAAAAAADwvw"
						],
						[
							17,
							1,
							"left_delete",
							null,
							"AQAAAEwBAAAAAAAATAEAAAAAAAABAAAAZg",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0BAAAAAAAATQEAAAAAAAAAAAAAAADwvw"
						],
						[
							19,
							1,
							"left_delete",
							null,
							"AQAAAEsBAAAAAAAASwEAAAAAAAABAAAAZA",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwBAAAAAAAATAEAAAAAAAAAAAAAAADwvw"
						],
						[
							21,
							1,
							"left_delete",
							null,
							"AQAAAEoBAAAAAAAASgEAAAAAAAABAAAAcw",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsBAAAAAAAASwEAAAAAAAAAAAAAAADwvw"
						],
						[
							23,
							1,
							"left_delete",
							null,
							"AQAAAEkBAAAAAAAASQEAAAAAAAABAAAAYQ",
							"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoBAAAAAAAASgEAAAAAAAAAAAAAAADwvw"
						]
					]
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 392.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"setsynconf",
						"Set Syntax: Git Config"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"remove",
						"Package Control: Remove Package"
					],
					[
						"insta",
						"Package Control: Install Package"
					],
					[
						"prefer",
						"Preferences: Settings"
					],
					[
						"canc",
						"Build: Cancel"
					],
					[
						"ky",
						"Preferences: Key Bindings"
					],
					[
						"key",
						"Preferences: Key Bindings"
					],
					[
						"preferen",
						"Preferences: Settings"
					],
					[
						"save",
						"File: Save All"
					],
					[
						"keyb",
						"Preferences: Key Bindings"
					],
					[
						"settin",
						"Preferences: Settings"
					],
					[
						"neovinsett",
						"Preferences: NeoVintageous Settings"
					],
					[
						"creatbel",
						"Origami: Create Pane Below"
					],
					[
						"remo",
						"Package Control: Remove Package"
					],
					[
						"keybind",
						"Preferences: Key Bindings"
					],
					[
						"keybin",
						"Preferences: Key Bindings"
					],
					[
						"prefersett",
						"Preferences: Settings"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"setting",
						"Preferences: Settings"
					],
					[
						"import",
						"Py Rock: Import Symbol"
					],
					[
						"inse",
						"Insert Nums"
					],
					[
						"ins",
						"Insert Nums"
					],
					[
						"sor",
						"SortBy: Alphabetically"
					],
					[
						"dest",
						"Origami: Destroy Current Pane"
					],
					[
						"debug",
						"Package Control: Disable Debug Mode"
					],
					[
						"lsp",
						"LSP: Format File"
					],
					[
						"can",
						"Build: Cancel"
					],
					[
						"preferpy",
						"Preferences: LSP-pyright Settings"
					],
					[
						"cacn",
						"Build: Cancel"
					],
					[
						"sort",
						"SortBy: Alphabetically"
					],
					[
						"ui",
						"UI: Select Color Scheme"
					],
					[
						"insnu",
						"Insert Nums"
					],
					[
						"clan",
						"Clang Format: Format Selection"
					],
					[
						"inst",
						"Package Control: Install Package"
					],
					[
						"insnum",
						"Insert Nums"
					],
					[
						"low",
						"Convert Case: Lower Case"
					],
					[
						"sav",
						"File: Save All"
					],
					[
						"inser",
						"Insert Nums"
					],
					[
						"mer",
						"Sublime Merge: Open Repository"
					],
					[
						"merge",
						"Sublime Merge: Open Repository"
					],
					[
						"cac",
						"Build: Cancel"
					],
					[
						"sortl",
						"Sort Lines"
					],
					[
						"buil",
						"Build: Cancel"
					],
					[
						"saveal",
						"File: Save All"
					],
					[
						"refer",
						"Project: Refresh Folders"
					],
					[
						"pref",
						"Preferences: Settings"
					],
					[
						"removepa",
						"Package Control: Remove Package"
					],
					[
						"forma",
						"LSP: Format File"
					],
					[
						"ruff",
						"Preferences: LSP-ruff Settings"
					],
					[
						"format",
						"LSP: Format File"
					],
					[
						"edit",
						"Project: Edit Project"
					],
					[
						"creap",
						"Origami: Create Pane on the Right"
					],
					[
						"prv",
						"PackageResourceViewer: Open Resource"
					],
					[
						"edi",
						"Project: Edit Project"
					],
					[
						"creri",
						"Origami: Create Pane on the Right"
					],
					[
						"instllpa",
						"Package Control: Install Package"
					],
					[
						"openai",
						"OpenAI: New Message"
					],
					[
						"crepa",
						"Origami: Create Pane on the Left"
					],
					[
						"proj",
						"Project: Edit Project"
					],
					[
						"crele",
						"Origami: Create Pane on the Left"
					],
					[
						"clea",
						"Bookmarks: Clear All"
					],
					[
						"braek",
						"Python Breakpoints: Toggle"
					],
					[
						"save pro",
						"Project: Save As"
					],
					[
						"colo",
						"UI: Select Color Scheme"
					],
					[
						"uicol",
						"UI: Select Color Scheme"
					],
					[
						"color",
						"UI: Select Color Scheme"
					],
					[
						"crae",
						"Origami: Create Pane with File Below"
					],
					[
						"rn",
						"Rename File"
					],
					[
						"rena",
						"Rename File"
					],
					[
						"rename",
						"Rename File"
					],
					[
						"craepa",
						"Origami: Create Pane Above"
					],
					[
						"text",
						"Set Syntax: Plain Text"
					],
					[
						"python",
						"Set Syntax: Python"
					],
					[
						"cnc",
						"ColorSchemeSelector: Next Color Scheme"
					],
					[
						"fold",
						"Code Folding: Fold All"
					],
					[
						"ccanc",
						"Package Control: Advanced Install Package"
					],
					[
						"cahc",
						"Package Control: Add Channel"
					],
					[
						"dist",
						"View: Toggle Distraction Free"
					],
					[
						"zoom",
						"Origami: Zoom/Unzoom Current Pane (Toggle Zoom)"
					],
					[
						"creabel",
						"Origami: Create Pane Below"
					],
					[
						"soa",
						"SortBy: Alphabetically"
					],
					[
						"tab",
						"View: Toggle Tabs"
					],
					[
						"move",
						"Origami: Move File to Pane on the Right"
					],
					[
						"tabs",
						"View: Toggle Tabs"
					],
					[
						"craebelo",
						"Origami: Create Pane Below"
					],
					[
						"bel",
						"Origami: Create Pane Below"
					],
					[
						"crea",
						"Origami: Create Pane on the Right"
					],
					[
						"crerig",
						"Origami: Create Pane on the Right"
					],
					[
						"trarigh",
						"Origami: Destroy Pane on the Right"
					],
					[
						"minim",
						"View: Toggle Minimap"
					],
					[
						"instll",
						"Package Control: Install Package"
					],
					[
						"col",
						"UI: Select Color Scheme"
					],
					[
						"install pa",
						"Package Control: Install Package"
					],
					[
						"colorcomm",
						"ColorSchemeSelector: Random Color Scheme"
					],
					[
						"me",
						"View: Toggle Menu"
					],
					[
						"de",
						"Origami: Destroy Current Pane"
					],
					[
						"menu",
						"View: Toggle Menu"
					],
					[
						"sett",
						"Preferences: Settings"
					],
					[
						"togg",
						"View: Toggle Menu"
					],
					[
						"cerri",
						"Origami: Create Pane on the Right"
					],
					[
						"detrc",
						"Origami: Destroy Current Pane"
					],
					[
						"sypy",
						"Set Syntax: Python"
					],
					[
						"uis",
						"UI: Select Color Scheme"
					],
					[
						"uic",
						"UI: Select Color Scheme"
					],
					[
						"selecolo",
						"UI: Select Color Scheme"
					],
					[
						"in",
						"Package Control: Install Package"
					],
					[
						"enstai",
						"Package Control: Satisfy Dependencies"
					],
					[
						"yap",
						"PyYapf: Format Document"
					],
					[
						"desp",
						"Origami: Destroy Current Pane"
					],
					[
						"for",
						"Clang Format: Format Selection"
					],
					[
						"ya",
						"PyYapf: Format Document"
					],
					[
						"runte",
						"Terminus Utilities: Generate User Theme"
					],
					[
						"buildwi",
						"Build With: test_align_code"
					],
					[
						"pyrigh",
						"Preferences: LSP-pyright Settings"
					],
					[
						"crebel",
						"Origami: Create Pane Below"
					],
					[
						"to",
						"View: Toggle Menu"
					],
					[
						"project",
						"Project: Edit Project"
					],
					[
						"unfo",
						"Code Folding: Unfold All"
					],
					[
						"remopa",
						"Package Control: Remove Package"
					],
					[
						"reopa",
						"Package Control: Remove Package"
					],
					[
						"synpy",
						"Set Syntax: Python"
					],
					[
						"synpay",
						"Set Syntax: Python"
					],
					[
						"pyt",
						"Set Syntax: Python"
					],
					[
						"creatpab",
						"Origami: Create Pane Below"
					],
					[
						"create",
						"Origami: Create Pane on the Right"
					],
					[
						"destr",
						"Origami: Destroy Current Pane"
					],
					[
						"createpanlef",
						"Origami: Create Pane on the Left"
					]
				],
				"width": 488.0
			},
			"console":
			{
				"height": 283.0,
				"history":
				[
					"sublime.log_commands(True)",
					"print()\n",
					"print()",
					"clear",
					"os.environ['PATH']",
					"print(sys.version)",
					"import os",
					"print(sys.path)",
					"print(sys.executable)",
					"import sys",
					"os.environ['PATH']",
					"import os",
					"sys.path",
					"import sys",
					"print(os.environ['PATH'])",
					"import os",
					"print(os.environ['PATH'])",
					"import os",
					"print(os.environ['PATH'])",
					"import os",
					"print(sys.executable)",
					"print sys.executable",
					"import sys"
				]
			},
			"distraction_free":
			{
				"menu_visible": false,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": true,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/home/sheffler/.config/qtile"
			],
			"file_history":
			[
				"/home/sheffler/.config/qtile/config.py",
				"/home/sheffler/.config/qtile/.yapf.style",
				"/home/sheffler/.config/.yapf.style",
				"/home/sheffler/.profile",
				"/etc/systemd/sleep.conf",
				"/home/sheffler/software/graphbolt/apps/Makefile",
				"/home/sheffler/rfd_tip/.github/workflows/run_tests_digs.yml",
				"/home/sheffler/rfd_tip/ci/run_pytest.sh",
				"/home/sheffler/rfd_tip/ci/checkout_submodules.sh",
				"/home/sheffler/rfd/rf_diffusion/test_inference.py",
				"/home/sheffler/rfdsym/ide/whs/notes.txt",
				"/home/sheffler/rfdsym/ide/whs/rf_diffusion.sublime-project",
				"/home/sheffler/rfdsym/sublime_build.log",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/voxel_viz.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/voxdock.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/voxel/test_voxel.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_semantics.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_conditions.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/samp/test_tip_atom_placer.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/tip_atom_placer.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fit/qcp_rms.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/fit/test_qcp_rms.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/voxel.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_sampling_cuda.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/samp/test_sampling.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/sampling.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_dilated_int.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/voxel/test_voxdock.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/cudafunc.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/rf2aa_util.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_sampling.cpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_shapes.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_sampling.cu",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/testutil.py",
				"/home/sheffler/rfdsym/lib/rf2aa/pytest.ini",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_model.py",
				"/home/sheffler/rfdsym/rf_diffusion/tests/integration/test_sym_inference.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_benchmark.py",
				"/home/sheffler/rfdsym/ide/whs/change_build_file.py",
				"/home/sheffler/project/neorifgen/dna_example.pdb",
				"/home/sheffler/.pymolrc",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/cudabuild.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fit/_qcp_rms_cuda.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/fit/test_qcp_scan.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/rf2aa_cuda_util.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_tip_atom_placer.cpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_tip_atom_placer.cu",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/_tip_atom_placer_cuda.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/tip_atom_placer_cuda.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/_voxel.cpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/dock/rigid_body.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/samp/sampling_cuda.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/bvh/test_bvh_numba.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/sampling/test_sampling.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/_sampling.cpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/_sampling_cuda.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/sampling.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/test_sampler.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fit/qcp_scan.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/_qcp_rms_cuda.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/_qcp_rms.cpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/fitting/test_qcp_scan.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/fitting/test_qcp_rms.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/chemical.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_slice.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_fitting.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fit/qcp_rms_cuda.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fit/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/qcp_rms.py",
				"/home/sheffler/rfd/pytest.ini",
				"/home/sheffler/rfdsym/rf_diffusion/run_inference.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_manager.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/sym/test_sym_manager.py",
				"/home/sheffler/rfdsym/rf_diffusion/tests/sym/test_sym_indep.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_check.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/qcp_scan.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/__init__.py",
				"/home/sheffler/rfdsym/pytest.ini",
				"/home/sheffler/rfdsym/rf_diffusion/exec/rf_diffusion_aa.spec",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/voxel_cuda.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/qcp_rms_cuda.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/sampling_cuda.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/_qcp_rms.cu",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/data/sampler.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sampling/_sampling.cu",
				"/home/sheffler/rfdsym/rf_diffusion/guide_posts.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/observer/observer.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/model/Track_module.py",
				"/home/sheffler/rfdsym/rf_diffusion/observer/pymol_observer.py",
				"/home/sheffler/rfdsym/pyproject.toml",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_options.py",
				"/home/sheffler/rfdsym/rf_diffusion/config/inference/sym.yaml",
				"/home/sheffler/rfdsym/rf_diffusion/inference/model_runners.py",
				"/home/sheffler/rfdsym/rf_diffusion/sym/sym_indep.py",
				"/home/sheffler/rfdsym/rf_diffusion/sym/rfd_sym_manager.py",
				"/home/sheffler/.config/sublime-text-3/Packages/User/clang_format.sublime-settings",
				"/home/sheffler/rfdsym/ci/check_test_results.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel/_voxel.cu",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tests/cuda/test_cudafunc.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tools/lazy_import.py",
				"/home/sheffler/rfdsym/.github/workflows/run_tests_digs.yml",
				"/home/sheffler/rfdsym/rf_diffusion/conftest.py",
				"/home/sheffler/rfdsym/rf_diffusion/viz/viz_indep_pymol.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/sym_adapt.py",
				"/home/sheffler/rfdsym/.clang-format",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/half.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/voxel_cuda.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/tools/__init__.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/_rms.cpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/_rms_cuda.hpp",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/fitting/_rms.cu",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/cuda/cuda_util.hpp",
				"/home/sheffler/rfdsym/.ruff.toml",
				"/home/sheffler/rfdsym/rf_diffusion/benchmark/input/serine_hydrolase/siteC_x10.pdb",
				"/home/sheffler/rfdsym/rf_diffusion/benchmark/input/serine_hydrolase/siteC_x20.pdb",
				"/home/sheffler/rfdsym/rf_diffusion/benchmark/input/serine_hydrolase/siteC.pdb",
				"/home/sheffler/rfdsym/rf_diffusion/aa_model.py",
				"/home/sheffler/rfdsym/lib/rf2aa/rf2aa/sym/rf2_sym_manager.py",
				"/home/sheffler/rfdsym/rf_diffusion/inference/data_loader.py",
				"/home/sheffler/rfdsym/rf_diffusion/tests/sym/test_rfd_sym_manager.py",
				"/home/sheffler/rfdsym/rf_diffusion/inference/centering.py"
			],
			"find":
			{
				"height": 44.0
			},
			"find_in_files":
			{
				"height": 213.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": true,
				"find_history":
				[
					"col",
					"home",
					"pl",
					"x",
					"')\n",
					"toggle_maximize",
					"mod",
					"maximi"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": true,
				"replace_history":
				[
				],
				"reverse": false,
				"scrollbar_highlights": true,
				"show_context": false,
				"use_buffer2": true,
				"use_gitignore": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/home/sheffler/.config/qtile"
				}
			],
			"groups":
			[
				{
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/home/sheffler/.config/kitty/kitty.conf",
							"selected": true,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 91391,
								"regions":
								{
								},
								"selection":
								[
									[
										239,
										239
									]
								],
								"settings":
								{
									"auto_complete_triggers":
									[
										{
											"characters": ".",
											"selector": "source.python"
										}
									],
									"copilot.completion._is_modified": false,
									"copilot.completion.is_visible": false,
									"copilot.completion.is_visible_panel_completions": false,
									"copilot.completion.is_waiting_completion": false,
									"copilot.completion.is_waiting_panel_completions": false,
									"copilot.completion.original_layout": null,
									"lsp_active": true,
									"lsp_uri": "file:///home/sheffler/.config/kitty/kitty.conf",
									"sublime_recent_sort_is_transient": false,
									"syntax": "Packages/TOML/TOML.sublime-syntax",
									"tabs_extra_last_activated": 1721118270.14,
									"tabs_extra_last_activated_sheet_index": 0
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/home/sheffler/.config/sublime-text-3/Packages/User/Celeste Dark.sublime-color-scheme",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 5693,
								"regions":
								{
								},
								"selection":
								[
									[
										866,
										866
									]
								],
								"settings":
								{
									"auto_complete_triggers":
									[
										{
											"characters": ".",
											"selector": "source.python"
										}
									],
									"copilot.completion._is_modified": false,
									"copilot.completion._is_saving": false,
									"copilot.completion.is_visible": false,
									"copilot.completion.is_waiting_completion": false,
									"lsp_active": true,
									"lsp_uri": "file:///home/sheffler/.config/sublime-text-3/Packages/User/Celeste%20Dark.sublime-color-scheme",
									"sublime_recent_sort_is_transient": false,
									"syntax": "Packages/JSON/JSON.sublime-syntax",
									"tab_size": 4,
									"tabs_extra_last_activated": 1721118205.41,
									"tabs_extra_last_activated_sheet_index": 1,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 2,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2052,
								"regions":
								{
								},
								"selection":
								[
									[
										376,
										323
									]
								],
								"settings":
								{
									"auto_complete": false,
									"auto_complete_triggers":
									[
										{
											"characters": ".",
											"selector": "source.python"
										}
									],
									"auto_indent": false,
									"copilot.completion._is_modified": false,
									"copilot.completion.is_visible": false,
									"copilot.completion.is_visible_panel_completions": false,
									"copilot.completion.is_waiting_completion": false,
									"copilot.completion.is_waiting_panel_completions": false,
									"copilot.completion.original_layout": null,
									"gutter": false,
									"lsp_active": true,
									"lsp_uri": "buffer:83",
									"sublime_recent_sort_is_transient": false,
									"syntax": "Packages/Text/Plain text.tmLanguage",
									"tab_size": 2,
									"tab_width": 2,
									"tabs_extra_last_activated": 1721118239.93,
									"tabs_extra_last_activated_sheet_index": 2,
									"translate_tabs_to_spaces": true,
									"word_wrap": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/home/sheffler/.config/fish/config.fish",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 612,
								"regions":
								{
								},
								"selection":
								[
									[
										164,
										164
									]
								],
								"settings":
								{
									"auto_complete_triggers":
									[
										{
											"characters": ".",
											"selector": "source.python"
										}
									],
									"copilot.completion._is_modified": false,
									"copilot.completion.completion_index": 0,
									"copilot.completion.completion_style": "popup",
									"copilot.completion.completions":
									[
										{
											"displayText": "3m",
											"docVersion": 32,
											"point": 158,
											"position":
											{
												"character": 17,
												"line": 7
											},
											"range":
											{
												"end":
												{
													"character": 17,
													"line": 7
												},
												"start":
												{
													"character": 0,
													"line": 7
												}
											},
											"region":
											[
												141,
												158
											],
											"text": "set -gx EDITOR 'w3m",
											"uuid": "167e3186-c9c1-4c22-b784-6e2c1283dda5"
										}
									],
									"copilot.completion.is_visible": false,
									"copilot.completion.is_visible_panel_completions": false,
									"copilot.completion.is_waiting_completion": false,
									"copilot.completion.is_waiting_panel_completions": false,
									"copilot.completion.original_layout": null,
									"lsp_active": true,
									"lsp_uri": "file:///home/sheffler/.config/fish/config.fish",
									"sublime_recent_sort_is_transient": false,
									"syntax": "Packages/fish/fish.sublime-syntax",
									"tabs_extra_last_activated": 1721104399.62,
									"tabs_extra_last_activated_sheet_index": 1
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"stack_multiselect": false,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/home/sheffler/software/graphbolt/apps/Makefile",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1498,
								"regions":
								{
								},
								"selection":
								[
									[
										329,
										329
									]
								],
								"settings":
								{
									"auto_complete_triggers":
									[
										{
											"characters": ".",
											"selector": "source.python"
										}
									],
									"copilot.completion._is_modified": false,
									"copilot.completion._is_saving": false,
									"copilot.completion.is_visible": false,
									"copilot.completion.is_visible_panel_completions": false,
									"copilot.completion.is_waiting_completion": false,
									"copilot.completion.is_waiting_panel_completions": false,
									"copilot.completion.original_layout": null,
									"lsp_active": true,
									"lsp_uri": "file:///home/sheffler/software/graphbolt/apps/Makefile",
									"sublime_recent_sort_is_transient": false,
									"syntax": "Packages/Makefile/Makefile.sublime-syntax",
									"tab_size": 3,
									"tabs_extra_last_activated": 1721102096.21,
									"tabs_extra_last_activated_sheet_index": 0,
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"stack_multiselect": false,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 44.0
			},
			"input":
			{
				"height": 224.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": false,
			"output.LSP Log Panel":
			{
				"height": 0.0
			},
			"output.SublimeLinter":
			{
				"height": 0.0
			},
			"output.diagnostics":
			{
				"height": 0.0
			},
			"output.exec":
			{
				"height": 33.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"pinned_build_system": "runtests.py",
			"position": "0,0,0,0,0,0,0,2110,1078,3840,2160,0",
			"project": "",
			"replace":
			{
				"height": 136.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"yapf",
						".yapf.style"
					],
					[
						"conf",
						"config.py"
					],
					[
						"checko",
						"ci/checkout_submodules.sh"
					],
					[
						"submo",
						"ci/checkout_submodules.sh"
					],
					[
						"github",
						".github/workflows/run_tests_digs.yml"
					],
					[
						"runpyt",
						"ci/run_pytest.sh"
					],
					[
						"dila",
						"lib/rf2aa/rf2aa/samp/_dilated_int.hpp"
					],
					[
						"smahpp",
						"lib/rf2aa/rf2aa/samp/_sampling_cuda.hpp"
					],
					[
						"test_samp",
						"lib/rf2aa/rf2aa/tests/samp/test_sampling.py"
					],
					[
						"sampl",
						"lib/rf2aa/rf2aa/samp/sampling.py"
					],
					[
						"voxehpp",
						"lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp"
					],
					[
						"voxel",
						"lib/rf2aa/rf2aa/voxel/voxel.py"
					],
					[
						"testvoxdo",
						"lib/rf2aa/rf2aa/tests/voxel/test_voxdock.py"
					],
					[
						"test_qcp",
						"lib/rf2aa/rf2aa/tests/fit/test_qcp_rms.py"
					],
					[
						"tip_atom_pla",
						"lib/rf2aa/rf2aa/samp/tip_atom_placer.py"
					],
					[
						"test_tip",
						"lib/rf2aa/rf2aa/tests/samp/test_tip_atom_placer.py"
					],
					[
						"tests_ini",
						"lib/rf2aa/rf2aa/tests/__init__.py"
					],
					[
						"test_cond",
						"lib/rf2aa/rf2aa/tests/test_conditions.py"
					],
					[
						"test_sema",
						"lib/rf2aa/rf2aa/tests/test_semantics.py"
					],
					[
						"testvox",
						"lib/rf2aa/rf2aa/tests/voxel/test_voxel.py"
					],
					[
						"utihpp",
						"lib/rf2aa/rf2aa/cuda/rf2aa_util.hpp"
					],
					[
						"sampcpp",
						"lib/rf2aa/rf2aa/samp/_sampling.cpp"
					],
					[
						"shap",
						"lib/rf2aa/rf2aa/samp/_shapes.hpp"
					],
					[
						"sampli",
						"lib/rf2aa/rf2aa/samp/sampling.py"
					],
					[
						"test_sam",
						"lib/rf2aa/rf2aa/tests/samp/test_sampling.py"
					],
					[
						"voxelhpp",
						"lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp"
					],
					[
						"test_vox",
						"lib/rf2aa/rf2aa/tests/voxel/test_voxel.py"
					],
					[
						"vox.py",
						"lib/rf2aa/rf2aa/voxel/voxel.py"
					],
					[
						"utilhpp",
						"lib/rf2aa/rf2aa/cuda/rf2aa_util.hpp"
					],
					[
						"samplcpp",
						"lib/rf2aa/rf2aa/samp/_sampling.cpp"
					],
					[
						"samplhpp",
						"lib/rf2aa/rf2aa/samp/_sampling_cuda.hpp"
					],
					[
						"voxdo",
						"lib/rf2aa/rf2aa/voxel/voxdock.py"
					],
					[
						"voxelvi",
						"lib/rf2aa/rf2aa/voxel/voxel_viz.py"
					],
					[
						"_samplcu",
						"lib/rf2aa/rf2aa/samp/_sampling.cu"
					],
					[
						"samplingcpp",
						"lib/rf2aa/rf2aa/samp/_sampling.cpp"
					],
					[
						"samplin",
						"lib/rf2aa/rf2aa/samp/sampling.py"
					],
					[
						"voxhpp",
						"lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp"
					],
					[
						"test_condi",
						"lib/rf2aa/rf2aa/tests/test_conditions.py"
					],
					[
						"chan",
						"ide/whs/change_build_file.py"
					],
					[
						"testsinit",
						"lib/rf2aa/rf2aa/tests/__init__.py"
					],
					[
						"voxe",
						"lib/rf2aa/rf2aa/voxel/voxel.py"
					],
					[
						"cudabui",
						"lib/rf2aa/rf2aa/cuda/cudabuild.py"
					],
					[
						"sampinit",
						"lib/rf2aa/rf2aa/samp/__init__.py"
					],
					[
						"tipatom",
						"lib/rf2aa/rf2aa/samp/tip_atom_placer.py"
					],
					[
						"testtipa",
						"lib/rf2aa/rf2aa/tests/samp/test_tip_atom_placer.py"
					],
					[
						"samp.cpp",
						"lib/rf2aa/rf2aa/samp/_sampling.cpp"
					],
					[
						"tipatompl",
						"lib/rf2aa/rf2aa/samp/_tip_atom_placer.cpp"
					],
					[
						"sampling",
						"lib/rf2aa/rf2aa/samp/sampling.py"
					],
					[
						"voxel.py",
						"lib/rf2aa/rf2aa/voxel/voxel.py"
					],
					[
						"voxcpp",
						"lib/rf2aa/rf2aa/voxel/_voxel.cpp"
					],
					[
						"cudaut",
						"lib/rf2aa/rf2aa/cuda/rf2aa_cuda_util.hpp"
					],
					[
						"_sampcud",
						"lib/rf2aa/rf2aa/samp/_sampling_cuda.hpp"
					],
					[
						"samp.",
						"lib/rf2aa/rf2aa/samp/sampling.py"
					],
					[
						"tsetsamp",
						"lib/rf2aa/rf2aa/tests/samp/test_sampling.py"
					],
					[
						"qcphpp",
						"lib/rf2aa/rf2aa/fit/_qcp_rms_cuda.hpp"
					],
					[
						"testqcpsca",
						"lib/rf2aa/rf2aa/tests/fit/test_qcp_scan.py"
					],
					[
						"smaplcpp",
						"lib/rf2aa/rf2aa/samp/_sampling.cpp"
					],
					[
						"samplcuhp",
						"lib/rf2aa/rf2aa/samp/_sampling_cuda.hpp"
					],
					[
						"sampcuda",
						"lib/rf2aa/rf2aa/samp/sampling_cuda.py"
					],
					[
						"cuda",
						"lib/rf2aa/rf2aa/cuda/cudabuild.py"
					],
					[
						"vox",
						"lib/rf2aa/rf2aa/tests/voxel/test_voxdock.py"
					],
					[
						"rf2init",
						"lib/rf2aa/rf2aa/__init__.py"
					],
					[
						"smplcpp",
						"lib/rf2aa/rf2aa/sampling/_sampling.cpp"
					],
					[
						"test_samplin",
						"lib/rf2aa/rf2aa/tests/sampling/test_sampling.py"
					],
					[
						"test_sa",
						"lib/rf2aa/rf2aa/tests/test_sampler.py"
					],
					[
						"testqcpsc",
						"lib/rf2aa/rf2aa/tests/fit/test_qcp_scan.py"
					],
					[
						"qcprmspy",
						"lib/rf2aa/rf2aa/fit/qcp_rms.py"
					],
					[
						"test_qc",
						"lib/rf2aa/rf2aa/tests/fit/test_qcp_rms.py"
					],
					[
						"test_qcp_sca",
						"lib/rf2aa/rf2aa/tests/fit/test_qcp_scan.py"
					],
					[
						"numba",
						"lib/rf2aa/rf2aa/tests/bvh/test_bvh_numba.py"
					],
					[
						"qcp_hpp",
						"lib/rf2aa/rf2aa/fitting/_qcp_rms_cuda.hpp"
					],
					[
						"qcpcpp",
						"lib/rf2aa/rf2aa/fitting/_qcp_rms.cpp"
					],
					[
						"test_qp",
						"lib/rf2aa/rf2aa/tests/fitting/test_qcp_rms.py"
					],
					[
						"qcp_r",
						"lib/rf2aa/rf2aa/fitting/qcp_rms.py"
					],
					[
						"test_qcprms",
						"lib/rf2aa/rf2aa/tests/fitting/test_qcp_rms.py"
					],
					[
						"rms.cpp",
						"lib/rf2aa/rf2aa/fitting/_qcp_rms.cpp"
					],
					[
						"rms",
						"lib/rf2aa/rf2aa/fitting/_qcp_rms_cuda.hpp"
					],
					[
						"qcpr",
						"lib/rf2aa/rf2aa/fitting/qcp_rms.py"
					],
					[
						"cudabu",
						"lib/rf2aa/rf2aa/cuda/cudabuild.py"
					],
					[
						"testnub",
						"lib/rf2aa/rf2aa/tests/bvh/test_bvh_numba.py"
					],
					[
						"cudaini",
						"lib/rf2aa/rf2aa/cuda/__init__.py"
					],
					[
						"smpl",
						"lib/rf2aa/rf2aa/sampling/sampling.py"
					],
					[
						"pytest.ini",
						"pytest.ini"
					],
					[
						"spec",
						"rf_diffusion/exec/rf_diffusion_aa.spec"
					],
					[
						"voxvi",
						"lib/rf2aa/rf2aa/voxel/voxel_viz.py"
					],
					[
						"cudafun",
						"lib/rf2aa/rf2aa/cuda/cudafunc.py"
					],
					[
						"voxelini",
						"lib/rf2aa/rf2aa/voxel/__init__.py"
					],
					[
						"voxeehpp",
						"lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp"
					],
					[
						"rmscu",
						"lib/rf2aa/rf2aa/fitting/_qcp_rms_cuda.hpp"
					],
					[
						"qcp_sca",
						"lib/rf2aa/rf2aa/fitting/qcp_scan.py"
					],
					[
						"testrms",
						"lib/rf2aa/rf2aa/tests/fitting/test_qcp_rms.py"
					],
					[
						"qcpscan",
						"lib/rf2aa/rf2aa/fitting/qcp_scan.py"
					],
					[
						"tetqcsc",
						"~/rfdsym/lib/rf2aa/rf2aa/tests/fitting/test_qcp_scan.py"
					],
					[
						"fittinini",
						"lib/rf2aa/rf2aa/fitting/__init__.py"
					],
					[
						"qcp_rms",
						"lib/rf2aa/rf2aa/fitting/qcp_rms.py"
					],
					[
						"cudautihpp",
						"lib/rf2aa/rf2aa/cuda/rf2aa_cuda_util.hpp"
					],
					[
						"cuda.py",
						"lib/rf2aa/rf2aa/voxel/voxel_cuda.py"
					],
					[
						"_cuda.py",
						"lib/rf2aa/rf2aa/sampling/sampling_cuda.py"
					],
					[
						"_cuda",
						"lib/rf2aa/rf2aa/sampling/sampling_cuda.py"
					],
					[
						"cudainit",
						"lib/rf2aa/rf2aa/cuda/__init__.py"
					],
					[
						"rmscuda",
						"lib/rf2aa/rf2aa/fitting/qcp_rms_cuda.py"
					],
					[
						"qcprmscpp",
						"lib/rf2aa/rf2aa/fitting/_qcp_rms.cpp"
					],
					[
						"samhpp",
						"lib/rf2aa/rf2aa/sampling/_sampling_cuda.hpp"
					],
					[
						"qcp",
						"lib/rf2aa/rf2aa/fitting/_qcp_rms.cu"
					],
					[
						"test_qcp_rm",
						"lib/rf2aa/rf2aa/tests/fitting/test_qcp_rms.py"
					],
					[
						"test_symin",
						"rf_diffusion/tests/sym/test_sym_indep.py"
					],
					[
						"symman",
						"lib/rf2aa/rf2aa/sym/sym_manager.py"
					],
					[
						"test_symma",
						"lib/rf2aa/rf2aa/tests/sym/test_sym_manager.py"
					],
					[
						"voxcu",
						"lib/rf2aa/rf2aa/voxel/voxel_cuda.py"
					],
					[
						"samplingcu",
						"lib/rf2aa/rf2aa/sampling/sampling_cuda.py"
					],
					[
						"testsam",
						"lib/rf2aa/rf2aa/tests/sampling/test_sampling.py"
					],
					[
						"samplpy",
						"lib/rf2aa/rf2aa/data/sampler.py"
					],
					[
						"sam",
						"lib/rf2aa/rf2aa/sampling/_sampling.cu"
					],
					[
						"voxeh",
						"lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp"
					],
					[
						"samcuda",
						"lib/rf2aa/rf2aa/sampling/_sampling_cuda.hpp"
					],
					[
						"cuda_ut",
						"lib/rf2aa/rf2aa/cuda/rf2aa_cuda_util.hpp"
					],
					[
						"samplcu",
						"lib/rf2aa/rf2aa/sampling/sampling_cuda.py"
					],
					[
						"rf2aaini",
						"lib/rf2aa/rf2aa/__init__.py"
					],
					[
						"vox.cu",
						"lib/rf2aa/rf2aa/voxel/_voxel.cu"
					],
					[
						"voxini",
						"lib/rf2aa/rf2aa/voxel/__init__.py"
					],
					[
						"vox.hpp",
						"lib/rf2aa/rf2aa/voxel/_voxel_cuda.hpp"
					],
					[
						"testcuda",
						"lib/rf2aa/rf2aa/tests/cuda/test_cudafunc.py"
					],
					[
						"vox.cpp",
						"lib/rf2aa/rf2aa/voxel/_voxel.cpp"
					],
					[
						"testcu",
						"lib/rf2aa/rf2aa/tests/cuda/test_cudafunc.py"
					],
					[
						"cudaf",
						"lib/rf2aa/rf2aa/cuda/cudafunc.py"
					],
					[
						"subli",
						"sublime_build.log"
					],
					[
						"util.hpp",
						"lib/rf2aa/rf2aa/cuda/rf2aa_util.hpp"
					],
					[
						"_vox",
						"lib/rf2aa/rf2aa/voxel/_voxel.cpp"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 335.0,
				"last_filter": "__deepc",
				"selected_items":
				[
					[
						"__deepc",
						"__deepcopy__"
					],
					[
						"fillrom",
						"fill_from_contiguous"
					],
					[
						"cretestsym",
						"create_test_sym_manager"
					],
					[
						"inserco",
						"insert_contig_pre_atomization"
					],
					[
						"insercon",
						"insert_contig_pre_atomization"
					],
					[
						"insercont",
						"insert_contig"
					],
					[
						"set_kind",
						"set_kind"
					],
					[
						"symindep",
						"SymAdaptIndep"
					],
					[
						"unsym",
						"move_unsym_to_match_asu"
					],
					[
						"set_nstep",
						"set_nstep"
					],
					[
						"mounsym",
						"move_unsym_to_match_asu"
					],
					[
						"testsymconti",
						"test_sym_contig"
					],
					[
						"applypair",
						"apply_symmetry_pair"
					]
				],
				"width": 759.0
			},
			"selected_group": 0,
			"settings":
			{
				"copilot.conversation.code_block_index":
				{
				},
				"copilot.conversation.conversation_entries":
				[
				],
				"copilot.conversation.conversation_id": "",
				"copilot.conversation.follow_up": "",
				"copilot.conversation.is_waiting_conversation": false,
				"copilot.conversation.original_layout": null,
				"copilot.conversation.suggested_title": "",
				"copilot.copilotignore.patterns":
				{
				}
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 323.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 1336,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
			"/home/sheffler/rfdsym/ide/whs/rf_diffusion.sublime-workspace",
			"/home/sheffler/willutil/ide/willutil.sublime-workspace",
			"/home/sheffler/rpxdock/rpxdock_master/ide/rpxdock.sublime-workspace",
			"/home/sheffler/rpxdock/ide/worms.sublime-workspace",
			"/home/sheffler/rfdci/ide/whs/rf_diffusion.sublime-workspace",
			"/home/sheffler/rfdsym/lib/rf2aa/ide/whs/rf2aa.sublime-workspace",
			"/home/sheffler/ide/whs/rf_diffusion.sublime-workspace",
			"/home/sheffler/rf/rfsym/ide/whs/rf2aa.sublime-workspace",
			"/home/sheffler/rfdsym/ide/whs/whs.sublime-workspace",
			"/home/sheffler/rpxdock/rpxdock/ide/rpxdock.sublime-workspace",
			"/home/sheffler/rf/rfdsym/ide/whs/whs.sublime-workspace",
			"/home/sheffler/src/willutil/ide/willutil.sublime-workspace",
			"/home/sheffler/src/rfdsym/ide/rfdsym.sublime-workspace",
			"/home/sheffler/src/rf_diffusion_symmmotif_HE/ide/rf_diffusion.sublime-workspace",
			"/home/sheffler/src/rfdiff_whs/ide/rf_diffusion.sublime-workspace",
			"/home/sheffler/src/rpxdock_master/ide/rpxdock.sublime-workspace",
			"/home/sheffler/src/rf_allatom/ide/rf_diffusion.sublime-workspace",
			"/home/sheffler/src/rf_allatom_dj/ide/rf_allatom.sublime-workspace",
			"/home/sheffler/src/rf_allatom_dj_merge/ide/rf_allatom.sublime-workspace",
			"/home/sheffler/src/rf_diffusion_symmmotif_WHS_test/ide/rf_diffusion.sublime-workspace",
			"/home/sheffler/src/rpxdock_pristine/ide/rpxdock.sublime-workspace",
			"/home/sheffler/tmp/qcpcode/qcprot/qcp.sublime-workspace",
			"/home/sheffler/project/symmmotif_HE/will.sublime-workspace",
			"/home/sheffler/src/rf_diffusion_xtal/ide/rf_diffusion.sublime-workspace",
			"/home/sheffler/src/rf_diffusion_main/ide/rf_diffusion.sublime-workspace",
			"/home/sheffler/src/wills_pymol_crap/ide/wills_pymol_crap.sublime-workspace",
			"/home/sheffler/src/rf_diffusion_helen/ide/rf_diffusion_helen.sublime-workspace",
			"/home/sheffler/src/idlefall/ide/idlefall.sublime-workspace",
			"/home/sheffler/src/rf_diffusion_main/examples/bigsym/run_diffuse_I213.sublime-workspace",
			"/home/sheffler/src/BFF/rf_diffusion/ide/rf_diffusion.sublime-workspace",
			"/home/sheffler/src/rf_diffusion/ide/rf_diffusion.sublime-workspace",
			"/home/sheffler/src/kids/ide/kids.sublime-workspace",
			"/home/sheffler/src/willutil2/ide/willutil.sublime-workspace",
			"/home/sheffler/src/rpxdock_asym/ide/rpxdock.sublime-workspace",
			"/home/sheffler/src/worms/ide/worms.sublime-workspace",
			"/home/sheffler/src/rpxdock_merge220513/ide/rpxdock.sublime-workspace",
			"/home/sheffler/src/rpxdock/ide/rpxdock.sublime-workspace",
			"/home/sheffler/src/worms_unittests/ide/worms.sublime-workspace",
			"/digs/home/sheffler/src/rpxdock_merge220513/ide/rpxdock.sublime-workspace",
			"/home/sheffler/src/rpxdock_ref/ide/rpxdock.sublime-workspace",
			"/home/sheffler/src/af2mc/ide/af2mc.sublime-workspace",
			"/home/sheffler/Documents/GM220429/ide/gm220429.sublime-workspace",
			"/home/sheffler/Documents/GM22429/data/gm220429.sublime-workspace",
			"/home/sheffler/src/mpnn/ide/mpnn.sublime-workspace",
			"/home/sheffler/src/mof/ide/mof.sublime-workspace",
			"/projects/ml/alphafold/alphafold_git/ide/af2.sublime-workspace",
			"/home/sheffler/src/rpxdock_alena/ide/rpxdock.sublime-workspace",
			"/home/sheffler/tmp/willutil/ide/willutil.sublime-workspace",
			"/home/sheffler/src/rpxdock_chelsea/ide/rpxdock.sublime-workspace",
			"/home/sheffler/src/derp_learning/ide/derp_learning.sublime-workspace",
			"/digs/sheffler/src/worms_unittests/ide/worms.sublime-workspace",
			"/home/sheffler/src/worms_unittests/worms.sublime-workspace",
			"/home/sheffler/src/worms/worms.sublime-workspace",
			"/home/sheffler/src/worms/worms/data/data.sublime-workspace",
			"/home/sheffler/src/rosetta/master/source/rosetta.sublime-workspace",
			"/home/sheffler/src/derp/ide/derp.sublime-workspace",
			"/digs/sheffler/src/mof/ide/mof.sublime-workspace",
			"/home/sheffler/src/wills_pymol_crap/ide/pymol.sublime-workspace",
			"/home/sheffler/src/pymol/ide/pymol.sublime-workspace",
			"/home/sheffler/debug/worms_dx_22/input/worms_debug.sublime-workspace",
			"/digs/sheffler/debug/mof/new_1res/ide/mofdigs.sublime-workspace",
			"/digs/sheffler/debug/mof/new_1res/input/mofrun.sublime-workspace",
			"/digs/sheffler/src/worms_beta/worms.sublime-workspace",
			"/home/sheffler/pymol3/pymol3.sublime-workspace",
			"/home/sheffler/src/rpxdock_tmp/ide/rpxdock.sublime-workspace",
			"/home/sheffler/src/macrocycle/ide/macrocycle.sublime-workspace",
			"/home/sheffler/src/games/ide/games.sublime-workspace",
			"/home/sheffler/src/mof/mof.sublime-workspace"
		]
	}
}
