import sys,os,random

prots = {}
prots['kira_bench']      = ('1acp','1b72','1ig5','1r69','1tig','1vii','1aa3','1ail',
                            '1bf4','1pgx','1tif','1utg','256b')
prots['phil_homolog']    = ('1af7','1csp','1di2','1mky','1n0u','1ogw','1shf','1tig','1b72',
                            '1dcj','1dtj','1mla','1o2f','1r69','1tif','2reb')
prots['kira_hom']        = ('1a4p','1agi','1ar0','1b07','1bmb','1cfy','1d2n','1erv','1pva',
                            '1acf','1ahn','1aw2','1be9','1btn','1crb','1dol','1ig5','1qav')
prots['bqian_caspbench'] = ('t196','t199','t205','t206','t223','t224','t232','t234','t249')
prots['sraman_nmr']      = ('1fvk','1hb6','1hoe','1i27','1who','2int','3il8','4rnt') 


PATHS = """Rosetta Input/Output Paths (order essential)
path is first '/', './',or  '../' to next whitespace, must end with '/'
INPUT PATHS:
pdb1	                        %(pdb1)s
pdb2                            %(pdb1)s
alternate data files            %(alternate)s
fragments                       %(fragments)s
structure dssp,ssa (dat,jones)  %(structure)s
sequence fasta,dat,jones        %(sequence)s
constraints                     %(constraints)s
starting structure              %(starting)s
data files                      %(datafiles)s
OUTPUT PATHS:
movie                           %(movieout)s
pdb path                        %(pdbout)s
score                           %(scoreout)s
status                          %(statusout)s
user                            %(userout)s
FRAGMENTS: (use '*****' in place of pdb name and chain)
2                                      number of valid fragment files
3                                      frag file 1 size
%(frags3)s                               name
9                                      frag file 2 size
%(frags9)s                               name
-------------------------------------------------------------------------
Autogenerated by python
Date:   %(date)s
Author: sheffler
-------------------------------------------------------------------------
"""

paths = {}
paths['pdb1']        = './'
paths['pdb2']        = './'
paths['alternate']   = './'
paths['fragments']   = './rosetta_data'
paths['structure']   = './rosetta_data'
paths['sequence']    = './rosetta_data'
paths['constraints'] = './rosetta_data'
paths['starting']    = './'
paths['datafiles']   = '/users/sheffler/data/rosetta_database/'
paths['movie']       = './'
paths['pdbout']      = './'
paths['score']       = './'
paths['status']      = './'
paths['user']        = './'
paths['frags3']      = 'aa*****03_05.200_v1_3'
paths['frags9']      = 'aa*****09_05.200_v1_3'

regionjob = """
mkdir -p log ;
pkdir -p data ;
rm -f log/tmp_score_file.fasc ;
rm -f data/%(group)s_region.data ;
nice -n15 ~/rosetta/rosetta_features/rosetta.gcc \
          %(series)s %(prot) %(chain)s           \
          -score                                 \
          -scorefile log/tmp_score_file          \
          -decoyfeatures region                  \
          -fa_input                              \
          -try_both_his_tautomers                \
          -l %(group)s.list                      \
          >  log/%(group)s_region.log            \
          2> log/%(group)s_region.err            \
nice -n15 grep DF_REGION log/%(group)s_region.log > data/%(group)s_region.data ;
"""            

pathfile = "autopaths."+random.random()
open(pathfile)
